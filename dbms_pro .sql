-- phpMyAdmin SQL Dump
-- version 4.2.7.1
-- http://www.phpmyadmin.net
--
-- Host: 127.0.0.1
-- Generation Time: Apr 24, 2015 at 09:15 AM
-- Server version: 5.6.20
-- PHP Version: 5.5.15

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `dbms_pro`
--

-- --------------------------------------------------------

--
-- Table structure for table `course`
--

CREATE TABLE IF NOT EXISTS `course` (
  `course_name` varchar(60) NOT NULL,
  `course_id` varchar(20) NOT NULL,
  `credit` int(10) NOT NULL,
  `course_info` varchar(10000) NOT NULL,
  `dep_id` varchar(20) NOT NULL,
  `sem` int(3) NOT NULL,
  `url` varchar(40) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `course`
--

INSERT INTO `course` (`course_name`, `course_id`, `credit`, `course_info`, `dep_id`, `sem`, `url`) VALUES
('Computer organization and architecture', '3CS_COA', 4, ' COMPUTER ORGANIZATION AND ARCHITECTURE (4-0-0-4)  \r\nOBJECTIVE:   The objective of the course is to distinguish between computer architecture and computer organization, describe the operation of CPU, memory, bus, and I/O, and identify and tell the purpose of different levels of memory. To have a thorough understanding of the basic structure and operation of a digital computer and discuss in detail the operation of the arithmetic unit including the algorithms and implementation of fixed-point and floating-point addition, subtraction, multiplication and division To study in detail the different types of control and the concept of pipelining, the hierarchical memory system including cache memories and virtual memory and different ways of communicating with I/O devices and standard I/O interfaces.   \r\n UNIT I    12 Hrs  \r\nBasic Structure of Computers: Computer Types: Functional units: Input Unit, Memory Unit, Arithmetic & Logic unit, Output unit, Control unit; Basic operational concepts; Number Representation and Arithmetic Operations: Integers, Floating-Point Numbers; Character Representation; Performance: Technology, Parallelism Instruction Set Architecture: Memory Locations and Addresses: Byte addressability, Big-endian & Little-endian assignments, Word Alignment, Accessing Numbers, Characters; Memory Operations;  Instructions and Instruction Sequencing: Register Transfer Notation,  AssemblyLanguage Notation,  RISC and CISC Instruction Sets , Introduction to RISC Instruction Sets,  Instruction Execution and Straight-Line, Sequencing, Branching, Generating Memory Addresses; Addressing Modes: Implementation of Variables and Constants, Indirection and Pointers, Indexing and Arrays; Assembly Language: Assembler Directives, Number Notation; Stacks; Subroutines: Subroutine Nesting and the Processor Stack, Parameter Passing, The Stack Frame; Additional Instructions: Logic Instructions, Shift and Rotate Instructions, Multiplication and Division; Encoding of Machine Instructions;  \r\n UNIT II    10 Hrs  \r\nBasic Input/output: Accessing I/O Devices: I/O Device Interface, Program-Controlled I/O; Interrupts: Enabling and Disabling Interrupts, Handling Multiple Devices, Controlling I/O Device Behavior, Processor Control Registers;  Basic Processing Unit: Some Fundamental Concepts; Instruction Execution: Load Instructions,  Arithmetic and Logic Instructions, Store Instructions; Hardware Components: Register File, ALU, Data path, Instruction Fetch Section; Instruction Fetch and Execution Steps: Branching, Waiting for Memory; Hardwired Control: Data path Control Signals, Dealing with Memory Delay; Micro programmed Control;  \r\n UNIT III    10 Hrs  \r\nPipelining: Basic Concept—the Ideal Case; Pipeline Organization; Pipelining Issues; Input/output Organization: Bus Structure; Bus Operation: Synchronous Bus, Asynchronous Bus; Arbitration; Interface Circuits: Parallel Interface, Serial Interface; Interconnection Standards: Universal Serial Bus (USB).\r\n UNIT IV    10 Hrs  \r\nThe Memory System: Some Basic concepts; Semiconductor RAM Memories: Internal Organization of Memory Chips, Static Memories, Dynamic RAMs, Synchronous DRAMs, Structure of Larger Memories; Read-only Memories: ROM, PROM, EPROM, EEPROM, Flash memory; Direct Memory Access; Memory Hierarchy; Cache memories: Mapping functions; Performance considerations: Hit Rate & Miss Penalty Virtual memory: Address Translation;  \r\n UNIT V    10 Hrs  \r\nArithmetic: Addition and Subtraction of Signed Numbers: Addition/Subtraction Logic Unit; Design of Fast Adders: Carry-Look Ahead Addition; Multiplication of Unsigned Numbers: Array Multiplier, Sequential Circuit Multiplier; Multiplication of Signed Numbers: The Booth Algorithm; Fast Multiplication: Bit-Pair Recoding of Multipliers; Integer Division; Floating-Point Numbers and Operations: Arithmetic Operations on Floating-Point Numbers;  \r\nText book  \r\nT1. Carl Hamacher Zvonko Vranesic and Safwat Zaky,  5th Edition ?Computer Organization?, McGraw-Hill.   \r\n  UNIT#      Sections UNIT – I Ch 1: 1.1, 1.2, 1.3, 1.6.5,    Ch 2 : 2.1, 2.2, 2.3, 2.4, 2.5, 2.6.1, 2.6.3, 2.8, 2.9, 2.10, 2.12       (Study material: Performance-Technology and Parallelism) UNIT – II Ch 4: 4.1, 4.2,    Ch 7: 7.1, 7.2, 7.4, 7.5.1, 7.5.2       (Study material: Hardware components) UNIT – III Ch 4: 4.5, 4.6, 4.7.3       Ch 8: 8.1 UNIT – IV      Ch 5: 5.1, 5.2 - 5.2.6, 5.3, 5.4, 5.5, 5.6 - 5.6.2, 5.7 UNIT – V      Ch 6: 6.1, 6.2, 6.3, 6.4, 6.5.1, 6.6, 6.7 (excluding 6.7.3)    ', 'CSE', 3, 'www.google.com'),
('Digital Design', '3CS_DD', 4, ' DIGITAL DESIGN (4-0-0-4)  \r\nOBJECTIVE  Digital systems have become a part of everyday life. The objective is to provide a thorough understanding of the fundamental principles of digital design. Students are introduced to the discipline of system design and will be able to design basic combinatorial and sequential components.  \r\n UNIT I 08 Hours Binary Numbers and Boolean algebra: Signed Binary Numbers, Binary codes, Boolean functions, Canonical and Standard forms Gate-Level Minimization: Introduction, The Map method, Four-Variable Map, Product-of-Sums Simplification, Don‘t-Care Conditions, NAND and NOR implementation, Other Two-Level implementations, Exclusive-OR Function.  \r\n UNIT II 08 Hours Combinational Logic: Introduction, Combinational circuits, Analysis Procedure, Design Procedure, Binary Adder-Subtractor, Decimal Adder, Binary multiplier, Magnitude comparator, Decoders, Encoders, and Multiplexers.  \r\n UNIT III 14 Hours Synchronous Sequential Logic: Introduction, Sequential circuits, Storage elements: Latches, Flip-Flops, Analysis of Clocked sequential circuits, State reduction and assignment, Design Procedure. Registers and Counters: Registers, Shift Registers, Ripple counters, Synchronous Counters, Other Counters.  \r\n UNIT IV 12 Hours Design at the Register Transfer Level: Introduction, RTL Notation, RTL in HDL, ASMs, Design example, Sequential Binary Multiplier, Control Logic, Design with Multiplexers, Race-Free design, Latch-Free design.  \r\n UNIT V 10 Hours Asynchronous Sequential Logic: Introduction, Analysis Procedure, Circuits with latches, Design procedure, Reduction of State and Flow Tables, Race-Free state assignment, Hazards, Design examples.  \r\nText book: T1. Digital Design, M. Morris Mano & Michael D. Ciletti, Fourth Edition, PHI 2007  \r\nUNIT#            SECTIONS UNIT – I   1- 1.6, 1.7, 2.5, 2.6, 3.1-3.3, 3.5-3.9 UNIT – II   2- 4.1-4.11 UNIT – III   5.1-5.5, 5.7, 5.8, 6.1-6.5 UNIT – IV   8.1-8.5, 8.7, 8.8, 8.10-8.12 UNIT - V   9.1-9.8  ', 'CSE', 3, 'www.google.com'),
('Digital Design lab', '3CS_DDL', 1, ' DIGITAL DESIGN LABORATORY (0-0-2-1)  \r\nProgramming Language: Verilog Software Tool                : ISE Xilinx  \r\nProgram #1 Implementation of all the basic gates  \r\nProgram #2 Implementation of Half adder & Full Adder  \r\nProgram #3 Implementation of 4:1 Multiplexer and 1:4 De-multiplexer  \r\nProgram #4 Implementation of encoder (with and without priority) and Decoder   \r\nProgram #5 Implementation of BCD Adder  \r\nProgram #6 Implementation of 4-bit Magnitude Comparator  \r\nProgram #7 Implementation of Flip flops [JK, D and T]  \r\nProgram #8 Implementation of counters [Ripple, up down]  \r\nProgram #9 Implementation of counters [Ring, Johnson]  \r\nProgram #10 Implementation of 4-bit serial adder  \r\nProgram #11 Implementation of universal shift register  \r\nProgram #12 Implementation of Sequential Binary Multiplier   \r\nSuggested Reading Verilog HDL-A guide to Digital Design & Synthesis by Samir Palnitkar, 2nd Edition, Pearson Education, Year 200x', 'CSE', 3, 'www.google.com'),
('Data Structure with Java', '3CS_DSJ', 4, ' DATA STRUCTURES WITH JAVA (4-0-0-4)  \r\nOBJECTIVE:  ? Understand and appreciate the concepts of interface and implementation ? Learn various arrangements of data and associated algorithms ? Learn to create data structures in Java ? Learn to use the appropriate data structures and algorithms from the library ? Introduction to data structures  \r\n     UNIT – I                                                       10 Hours  \r\nObject Oriented Programming, Objects and classes-Abstraction ,Encapsulation, Composition, Inheritance ,Polymorphism, Methods-Instance and class methods, Recursion, Exception Handling, Interface, Inner classes-Anonymous inner class, Reflection-Method, Package, Abstract data type, Arrays, Input output.  \r\n           UNIT – II                       10 Hours  \r\nList: Interface -Create, Insert, Delete, Update, traverse, implementation-Node based Linked list, Array implementation of a list, Head node and tail node, Additional behavior -Find , Delete, Reverse, Boundary conditions  \r\n                                                          UNIT – III                                                      12 Hours  \r\nStack, Queue and Priority Queue: Stacks-Interface, Implementation-Array Implementation, Linked List based Implementation, Queues-Interface, Implementation-Array Implementation, Linked List based Implementation, Circular Queues -Interface, Implementation-Array Implementation, Linked List based Implementation, Priority Queue-Interface, Implementation-Array ImplementationUnsorted , Sorted, Linked List based Implementation, List of Lists based Implementation.  \r\n       UNIT – IV                                       12 Hours  \r\nDoubly Linked List-Interface, Implementation-Array Implementation, Linked List based Implementation. Trees-Introduction, Binary Tree -Interface and Implementation, Creation, Insertion, Traversal, General purpose tree and forest-Representation as a binary tree, Binary Search Tree, Introduction to-AVL tree , 2-4 Tree, Red-Black Tree, B Tree. Heap- Heap sort, Priority queue implementation using Heap  \r\n               UNIT – V                      8 Hours Generic Programming-Generic Classes, Generic Methods. Collections -Collection Interface -List, Set, Map, Concrete Collection, Collection Framework, Algorithm  \r\nText books:  \r\nT1. Core Java Vol 1.Fundamentals Eighth Edition, Cay S. Horstmann & Gary Cornell T2: Data Structures, Algorithms and applications in Java, 2nd edition, University Press T3: Data Structures and Algorithms in Java, 3rd edition, by Michael T Goodrich and Roberto Tamassia. ', 'CSE', 3, 'www.google.com'),
('Data structure with java laboratory', '3CS_DSJL', 1, ' DATA STRUCTURES WITH JAVA LABORATORY (0-0-2-1)   \r\nProgram #1 Program to demonstrate use of Array with call back.  \r\nProgram #2 Program to demonstrate use of List  \r\nProgram #3 Program to demonstrate use of Stack.  \r\nProgram #4 Program to demonstrate use of Queues.  \r\nProgram #5 Program to demonstrate use of DLL.  \r\nProgram #6 Program to demonstrate use of Priority Queue.   \r\nProgram #7 Program to demonstrate use of Tree  \r\nProgram #8 Program to demonstrate use of Collections.  \r\nMiniproject :  ? Equivalent to 4 lab sessions ? To be developed by a group of 4 ', 'CSE', 3, 'www.google.com'),
('Mathematics-III for computer science', '3CS_M3', 5, ' MATHEMATICS – III FOR COMPUTER SCIENCE (5-0-0-5)  \r\nOBJECTIVE: Discrete mathematics concepts and notations are useful in studying and describing objects and problems in computer algorithms and programming languages and have applications in cryptography, automated theorem proving and software development. The objective of combinatorial mathematics is to demonstrate an understanding of the theory underlying exact approaches to combinatorial optimization problems, prove and interpret standard results in graph theory and develop, implement, and critically evaluate the correctness and performance of standard graph algorithms and recurrence relations of different orders.  \r\n                                                                         UNIT I                                                            14 Hrs Logic:          Propositional logic, equivalences, predicates and quantifiers, rules of inference, introduction to proofs, proof methods.  \r\n                                                                        UNIT II                 12 Hrs Sets, Functions and Relations: Sets, set operations, functions, recursive functions, sequences and summations, relations, equivalence relations and partial ordering.   \r\n                                                                        UNIT III              12 Hrs Counting: Basics of counting, the pigeonhole principle, permutations and combinations, recurrence relations, generating functions, inclusion-exclusion  \r\n                                                                        UNIT IV     10 Hrs Probability: Introduction to probability, axioms of probability, independence and conditional probability  \r\n                                                                        UNIT V     17 Hrs Graph Theory: Graphs, terminology and special types of graphs, isomorphism, Euler and Hamiltonian paths, planar graphs, graph coloring.  \r\nTextbook:  1. Discrete Mathematics and its Applications by Kenneth H Rosen, 7th edition, (Indian adaptation by Kamala Krithivasan), Tata McGraw Hill, 2011. \r\nReference Books: 1. Discrete and Combinatorial Mathematics: An Applied Introduction by Ralph P. Grimaldi and B V Ramana (Indian corrupted adaptation), 5th edition, Pearson, 2011. 2. Graph Theory with Applications to Engineering and Computer Science by Narsingh Deo, Prentice Hall India, 2004. 3. Discrete Mathematical Structures with Applications to Computer Science by J. P. Tremblay and R. Manohar, McGraw Hill. \r\nNote: Unit IV to be covered from Reference Book 1.   ', 'CSE', 3, 'www.google.com'),
('Programming with c', '3CS_PC', 4, ' PROGRAMMING WITH C (4-0-0-4)  \r\nCourse Objective:  C is the most commonly used programming language and the base for all the programming languages. C is close to the machine hardware and working with pointers, bytes and bits, optimized code can be written which work faster. C is the language of choice for programming embedded and mechatronic systems with hardware interfaces. This course provides a through introduction to C programming language starting with the declaration and defining of variables, operators and expressions, control structures. This course also deals with the functions, macros, pointers, arrays, structures, operations on files. This course also provides the understanding of dynamic memory allocation and introduction to data structures Lists and Trees.   \r\nUNIT I                  10 hours  \r\nIntroduction: Programming in ?C‘: Language Philosophy, program structure, steps in development and execution of program – pre-process, compile link, load and execute. Variables and constants – Declaration, initialization, assignment, simple input/output functions, #define and const declaration Operators and expressions – Arithmetic  operators, relational operators : concept of true and false, logical operators: short circuit evaluation, bitwise operators, assignment operators, increment and decrement operators, address operator and dereferencing operator, sizeof() operator- compile time and table lookup, evaluation of expression – order of evaluation of operands, order of evaluation of operators – precedence, association , sequence point. Control Structure – selection : if, switch, looping – while, for, do-while, break, continue, nested control structures, structured programming, pre and post conditions, loop invariant, counting loop and conditional loop, top tested and bottom tested loop, sentinel.  \r\n                          UNIT II                                      10 hours   \r\nFunctions - Declaration and prototype, definition, invocation, interface and implementation, using multiple files: server and client, arguments and parameters, order of evaluation, order of stacking, variable number of arguments, parameter passing, recursion. Macro - Definition and expansion, arguments and parameters, advantage and disadvantage of macros, inline functions (C99). Variable (revisited) – life, scope, storage class – global, external static, internal static, automatic, register, qualifier – long, short  \r\n                                                                    UNIT III                                                       12 hours  \r\nPointers – address operator and dereferencing operator, passing pointer to a variable as argument to a function (mimic parameter passing by reference) Array and pointer – attributes of an array, array at compile and array at runtime, initialization – designated initialization of an array(C99), accessing elements of an array - using index expression, pointer expression, pointer arithmetic, multidimensional array, arrays of character, passing array as an argument to a function, passing multidimensional array as argument to a function, specifying the size of the array parameter (C99), function returning a pointer, pointer to a function, concept of call back, pointers and strings \r\n UNIT IV                                    10 hours  \r\nStructure -  attributes of a structure, binary layout of a structure, initialization , assignment, accessing elements of a structure,  passing a structure as argument to a function, passing a pointer to a structure as argument to a function, pointer to const structure. Union- attributes of a union. Combinations – structure of structures, array of structures, structure of arrays, sorting and searching using predicates, bitfields  \r\n      UNIT V                                10 hours      \r\nFile operations – Physical file, logical file and mode, creating and reading files, random access, binary files – files of structures Dynamic memory management – allocation and de allocation, garbage leading to memory leak, dangling pointer, alias Introduction to data structures – List, tree   \r\nText Books:  \r\n1. The C Programming Language: Brian W. Kernighan & Dennis Ritchie. 2. Expert C Programming: Deep C Secrets: Van Der Linden. 3. The C Puzzle book: Feuer ', 'CSE', 3, 'www.google.com'),
('Programming with C labORATORY', '3CS_PCL', 1, ' PROGRAMMING WITH C LABORATORY (0-0-2-1)   \r\nProgram #1 Introduction to VI editor, gcc, gcc-e, gcc-c, gcc-o, understanding the process of compile, link, make.  \r\nProgram #2 Programs to demonstrate the use of Arithmetic, Relational, logical and bitwise operators, conditional statements  \r\nProgram #3 Programs to demonstrate the use of control structures – while, do-while, for, switch-case.  \r\nProgram #4 Programs involving functions, recursive functions.  \r\nProgram #5 Programs to demonstrate the application of macros  \r\nProgram #6 Programs to demonstrate the use of single dimensional arrays – sorting, searching  \r\nProgram #7 Programs to demonstrate the use of multidimensional arrays  \r\nProgram #8 Programs involving strings  \r\nProgram #9 Programs to demonstrate the use of structures, arrays of structures  \r\nProgram #10 Programs to demonstrate the use of unions, structure of structures.  \r\nProgram #11 Programs involving file operations.  \r\nProgram #12 Programs on Lists and their operations  \r\nProgram #13 Programs on Trees – binary trees, traversal, applications of trees ', 'CSE', 3, 'www.google.com'),
('Analysis and Designn of Algorithm', '4CS_ADA', 4, ' ANALYSIS AND DESIGN OF ALGORITHMS (4-0-0-4)  \r\nOBJECTIVE:  ? Design and analyze algorithms ? Learn various techniques in development of algorithms ? Proving the correctness of algorithm   ? Analyze the resource requirements in terms of time and space ? Appreciate the effect of problem size, architecture  \r\nPre-requisites: ? Programming ? Data Structures ? Discrete Mathematics  \r\n  UNIT I 08 Hours Introduction : Algorithms, fundamentals of algorithmic problem solving, important problem types, analysis framework, asymptotic notations and basic efficiency classes, mathematical analysis of non recursive and recursive algorithms, examples.  \r\n  UNIT II 10 Hours Brute Force: Selection sort, Bubble sort, sequential searching, string matching, Exhaustive search.  Divide & Conquer: Merge-sort, Quick-sort, Binary search, binary tree traversals and properties, multiplication of large integers and Strassen‘s matrix multiplication.  \r\n  UNIT III 10 Hours Decrease and Conquer : Insertion sort, depth first and breadth first search, topological sorting, Algorithm for generating Combinatorial objects, decrease-by-constant- factor algorithms  Transform and Conquer: Presorting, Gaussian Elimination, Balanced Search Trees, Heaps & Heap-sort, Horner‘s rule and Binary exponentiation.  \r\n  UNIT IV 16 Hours Space and time tradeoffs:  Input enhancement in string matching,  sorting by counting,  Hashing  ,B-trees Dynamic Programming: Computing a binomial coefficient, Warshall‘s and Floyd‘s algorithms, knapsack problem and memory functions. Greedy Technique:  Prim‘s algorithm, Kruskal‘s algorithm, Dijkstra‘s algorithm, Huffman trees. \r\nUNIT V 08 Hours Limitations of Algorithm Power: Lower bound arguments, decision trees, P, NP and NP complete problems.  Coping up with Limitations of Algorithm Power: Backtracking, Branch and Bound, Approximation algorithms for NP hard problems.     \r\nText book: T1. Introduction to The Design and Analysis of Algorithms , Anany Levitin, Second Edition, PEARSON Education,  2011 (updated version of the book)  \r\nReference Books: R1.  Algorithm Design : Jon Kleinberg & Eva Tardos, Pearson Education, 2006 R2. Fundamentals of Computer Algorithms : Horowitz et al, Second Edition, Universities Press, 2007 R3. Introduction to Algorithms : Cormen et al, Easter Economy Edition, 2002', 'CSE', 4, 'www.google.com'),
('Analysis and Design of Algorithms Laboratory', '4CS_ADAL', 1, ' ANALYSIS AND DESIGN OF ALGORITHMS LABORATORY (0-0-2-1)   \r\nProgram #1 Implement insertion sort and then implement binary search. Program #2      Using Brute Force  Approach a. Implement Sequential Search b. Implement String Matching   \r\nProgram #3      Using exhaustive search technique c. Implement Travelling Salespersons problem d. Implement Assignment problem   \r\nProgram #4 Write a recursive routine   a. Sort the elements using merge sort.  b. sort  the elements using quick sort  \r\nProgram #5   Implement   BFS & DFS to print all nodes that are reachable from a given starting node in a digraph.    \r\nProgram #6 Implement N queen‘s problem using backtracking  \r\nProgram #7 Find a subset of a given set S = {s1, s2, ..., sn } of n positive integers whose sum is equal to a given positive integer M. For ex : If S is { 11, 13, 24, 7 } and M = 31 then the two desired subsets are : Subset 1 : { 11, 13, 7 } and Subset 2 : { 24, 7 }  \r\nProgram #8 Implement Heap sort algorithm to sort the n elements and determine its time efficiency.  \r\nProgram #9 Write a program to check whether the given graph is connected or not using Warshall‘s algorithm  \r\nProgram #10 a. Find minimum cost spanning tree using Kruskal‘s algorithm. b. Find minimum cost spanning tree using Prim‘s algorithm.     \r\nPESIT Student Handbook 2013-14 Computer Science III & IV………………………………………… 26    \r\nProgram #11  Given a Knapsack of capacity M, and n objects of weights (w1, w2 …, wn)  with profits(p1,p2,…,pn), write a program to implement greedy knapsack that provides maximum profit.  \r\nProgram #12 Implement N queen‘s problem using backtracking ', 'CSE', 4, 'www.google.com'),
('Construction Materials & Technology - ll', '4CS_CMT2', 4, 'Construction Materials & Technology - ll\r\nLesson Plan\r\n\r\nSubject Code: 12CV256             Faculty: Prof. B. S Deepa                             No. of Hours: 39\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter 	Cumulative \r\n1-3	Unit 1	Flooring: Base preparation, Types of flooring, laying details.	8	8\r\n4-7		Form work:  Economy in form work, material for form work, form work details in RCC columns, beams and floors.  Slip forming.	10	18\r\n8-12	Unit 2	Paints, Varnishes and Distempers: Constituents of oil paint, characteristics, types, painting to wood, steel, iron and wall surfaces. Varnishes – constituents of varnishes – types of varnishes, method of applying varnishes.  Distemper and  application to new and old surfaces. Surface preservatives - metallic coating by hot dipping, electro plating, inorganic and organic chemical coating.	13	31\r\n13-14		Water and Weather proofing: different techniques, materials, application details.	5	36\r\n15-18	Unit 3	Cement: Portland cement, chemical composition, hydration, setting of cement, structure of hydrated cement, types of cement, grades of cement, testing of cement.	10	46\r\n19-22		Admixtures to concrete: Need and Use of different types of admixtures, mineral and chemical admixtures, properties, dosages, effects and usage.	10	56\r\n23		Ferro cement:  Concept, Constituents and Uses	3	59\r\n24-31	Unit 4	Aggregates: Classification, mechanical properties of aggregates, bulking of sand, soundness of aggregates, alkali-aggregate reaction, thermal properties, sieve analysis, fineness modulus, grading of aggregates, testing of aggregates.	21	80\r\n32		Water: Quality of water, use of sea water for concrete.	3	83\r\n33-36	Unit 5	Sustainable Construction: Concept, need, embodied energy and CO2 emissions in building materials, recurring and operational energy in buildings, total energy in building life cycle, zero energy and water neutral buildings, green buildings, rating systems – GRIHA (Green Rating for Integrated Habitat Assessment)	13	96\r\n37-39		LEED-India (Indian Green Building Council), points allocation and rating, Construction and Demolition (C&D) waste management- 4R’s Golden rule (Reduce, Reuse, Recycle, Recover) before final disposal. Safety, health and welfare facilities in construction sites.	4	100\r\nText Books:\r\n1. “Building Construction”, Punmia.B.C, Laxmi Publications, New Delhi, 2007\r\n2. “Engineering Materials” , Sushil Kumar, Standard Publication and Distributors, New Delhi\r\n3. “A Text Book of Geology”, Mukherjee P K,\r\nReference Books:\r\n1.	Charotar Publishing House, Anand, 1997   “Engineering Materials”, Rangwala.S.C,\r\n2.	Prentice Hall of India, New Delhi, 2007“Building Construction”, Varghese.P.C, Prentice      Hall of India, New Delhi, 2007\r\n3.	“Alternate materials”, K S Jagadish.\r\n4.	“Building Construction” by W B Mackay\r\n5.	National Building Code, BIS, New Delhi\r\n6.	IGBC Manual, GRIHA Manual\r\n7.	IS CODES.\r\n\r\n', 'CV', 4, 'www.google.com'),
('Database Management system ', '4CS_DBMS', 4, ' DATABASE MANAGEMENT SYSTEMS (4-0-0-4)  \r\nOBJECTIVE The objective of the course is to enable students to understand how large amounts of data are managed in database systems. Students learn how to design a good database, how to program data operations using SQL, and gain an overview of how transaction management and crash recovery are supported in databases.   \r\n UNIT I 10 Hours  \r\nIntroduction; An example; Characteristics of the Database approach; Actors on the scene; Workers behind the scene. Advantages of using DBMS approach: A brief history of database applications, when not to use a DBMS. Data models, schemas and instances; Three-schema architecture and data independence, Database languages and interfaces, the database system environment, Classification of Database Management systems, Using High-Level Conceptual Data Models for Database Design. Entity Types, Entity Sets, Attributes and Keys, Relationship Types, Relationship Sets, Roles and Structural Constraints, Weak Entity Types, Refining the ER Design for the COMPANY Database, ER Diagrams, Naming Conventions, Design Issues. Relationship types of degree higher than two.  \r\n UNIT II 11 Hours  \r\nRelational Model Concepts: Relational Model Constraints and Relational Database Schemas. Relational Model Constraints and Relational Database Schemas, Update Operations and Dealing with Constraint Violations. Unary Relational Operations: SELECT and PROJECT. Relational Algebra Operations from Set Theory, Binary Relational Operations: JOIN. Binary Relational Operations: DIVISION. Additional Relational Operations, Examples of Queries in Relational Algebra. Relational Database Design Using ER-to Relational Mapping   \r\n UNIT III 10 Hours  \r\nSQL: SQL Data Definition and Data types. Specifying Basic Constraints in SQL, Schema Change Statements in SQL Basic Queries in SQL, More Complex SQL Queries; Insert, Delete and Update Statements in SQL, Additional Features of SQL, Specifying General Constraints as Assertion and trigger. Views (Virtual Tables) in SQL. Additional features of SQL, Database programming issues and techniques. Embedded SQL, Dynamic SQL  \r\n UNIT IV 10 Hours  \r\nInformal Design Guidelines for Schemas Functional Dependencies, Normal Forms Based on Primary Keys.(1st  ,2nd   and 3rd NF). General Definitions of Second Third Normal Forms, BoyceCodd Normal Form, Properties of Relational Decompositions, Algorithms for Relational Database Schema Design, Algorithms for Relational Database Schema Design, Multi-valued Dependencies and Fourth Normal form, Join Dependencies, Fifth Normal Form, Database tuning, multi media. Object and distributed databases.\r\nUNIT V 11 Hours  \r\nThe ACID Properties, Transactions and Schedules, Concurrent Execution of Transactions, LockBased Concurrency Control and Performance of Locking, Transaction support in SQL, 2PL, Serializability and Recoverability, Introduction to Lock Management,  Lock Conversions. Dealing with Deadlocks, Specialized Locking Techniques, Concurrency Control without Locking. Introduction to ARIES: The Log, Other Recovery-Related Data Structures. The Write-Ahead Log Protocol, Check pointing, Recovery from System Crash, Media Recovery, Other approaches and Interaction with Concurrency Control, Introduction to Database Security, Discretionary Access Control, and Mandatory access control.   \r\nText Book: T1 Fundamentals of Database Systems Elmasri and Navathe, 5th Pearson Education, 2006 Chapters: 1,2,3,4, 5, 6.1, 7, 8, 16, 17, 18 & 21 ', 'CSE', 4, 'www.google.com'),
('Database Management laboratory', '4CS_DBMSL', 1, ' DATABASE MANAGEMENT LABORATORY (0-0-2-1)   \r\nProgram #1:  a. Get database connection, insert data into collection and save the database b. Access saved data using queries - find() and findOne()  \r\nProgram #2: Query Documents using conditional operators, regular expressions, array operators, $where, count, limits, skip and sort operators  \r\nProgram #3: MS Access: Creating table, Sorting of multi-column and selecting the rows  \r\nProgram #4:  ER Diagram: Draw ER diagrams that shows the entity types, attributes, relationships and cardinality ratios for Bank Management System and Employee Management System.  \r\nProgram #5:  ER to Schema Mapping: Implement the algorithm to convert ER to Schema Mapping for Employee Management System.  \r\nProgram #6:  Write and execute CREATE, ALTER, DROP and TRUNCATE statements in Bank database schema  \r\nProgram #7:  Write and execute SELECT, INSERT, UPDATE and DELETE statements in Bank database schema  \r\nProgram #8:  Write and execute SQL statements to query data including JOIN and SET operators for Bank database schema  \r\nProgram #9:  Write and execute SQL statements to query data including Grouping, aggregate and filter operations, correlated nested select statements  \r\nProgram #10: Write and execute DDL and DML statements for Views  \r\nProgram #11:  Write and execute COMMIT, SAVEPOINT and ROLLBACK statements in Bank database schema  \r\nProgram #12: Write and execute Triggers for DML statements ', 'CSE', 4, 'www.google.com'),
('Finite automata and formal langage', '4CS_FAFL', 4, ' FINITE AUTOMATA AND FORMAL LANGUAGES (4-0-0-4)   \r\nOBJECTIVE This course introduces the fundamental theory of computation. Starting with the most primitive computing device, a finite automaton, the course gradually introduces additional components to the device to enhance its computing power. The course also introduces students to the twin concepts of languages and grammars that correspond to classes of computing devices. Finally the course introduces the idea of a universal computing device and brings out theoretical limits of the very idea of computing.  \r\n UNIT I 10 Hours Introduction: Computers, computation, computability, automata, languages and grammars.  \r\nFinite Automata: Deterministic finite automata, non-deterministic finite automata, constructing finite automata, equivalence of deterministic and non-deterministic finite automata, minimizing finite automata.  \r\n UNIT II 12 Hours Regular Languages and Grammars: Regular expressions, equivalence of regular expressions, regular languages and finite automata, regular expressions in practice, regular grammars, their construction and equivalence to finite automata.  \r\nProperties of Regular Languages: Closure properties of regular languages, answering questions about regular languages, pumping lemma and identifying non-regular languages.  \r\n UNIT III 09 Hours Context-Free Languages and Grammars: Context-free grammars, parsing and ambiguity, constructing context-free grammars, conversion to Chomsky and Greibach normal forms, a membership algorithm for context-free languages, simple and linear grammars.  \r\n UNIT IV 09 Hours Pushdown Automata: Non-deterministic pushdown automata, constructing pushdown automata, equivalence of pushdown automata and context-free grammars.  \r\nProperties of Context-Free Languages: Closure properties and questions about context-free languages, pumping lemma for context-free languages.  \r\n UNIT V 12 Hours Turing Machines:  The standard Turing machine, constructing Turing machines, variations of Turing machines, universal Turing machine, Church-Turing thesis.  \r\nChomsky Hierarchy of Formal Languages: Recursive and recursively enumerable languages, diagonalization, unrestricted grammars, context-sensitive grammars and languages, linearbounded automata, deterministic pushdown automata and deterministic context-free languages.  \r\nIntroduction to Computability and Undecidability: Post Correspondence Problem, the halting problem of Turing machines, undecidable problems, overview of computational complexity.\r\nTextbook:   Theory of Computation: A Problem-Solving Approach Kavi Mahesh, Wiley India, New Delhi, 2012  \r\nUNIT#  Sections UNIT – I 1.1 – 1.8, 2.1 – 2.12, 3.1 – 3.5 UNIT – II 4.1 – 4.9, 5.1 – 5.7, 6.1 – 6.5 UNIT – III 7.1 – 7.12 UNIT – IV 8.1 – 8.8, 9.1 – 9.6 UNIT – V 10.1 – 10.10, 11.1 – 11.13, 12.1 – 12.10  \r\nReferences:  \r\nAn Introduction to Formal Languages and Automata, Peter Linz, 5th Edition, Jones and Bartlett, New Delhi, India, 2011.  \r\nIntroduction to Automata Theory, Languages, and Computation, John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman, 3rd edition, Pearson Education, Delhi, India, 2009.  \r\nTheory of Computation, Michael Sipser, Cengage Learning, New Delhi, India, 2008 ', 'CSE', 4, 'www.google.com'),
('Introduction to microprocessor ', '4CS_IMP', 4, ' INTRODUCTION TO MICROPROCESSOR (4-0-0-4)  \r\nOBJECTIVE It introduces the concepts and methodologies employed in designing a System on Chip based around a microprocessor core and in designing the microprocessor core itself. ARM System-onChip Architecture presents and discusses the major issues of system-on-chip design, including memory hierarchy, caches, memory management, on-chip buses, on-chip debug and production tests.  It provides an overview of the ARM processor family, enabling the reader to decide which ARM is best for the job in hand, describes the ARM and Thumb programming models enabling the designer to begin to develop applications.                                                                           UNIT I 10 Hours  \r\nAn Introduction to processor design: Processor architecture and organization, abstraction in hardware design, MU0 – a simple processor, processor design trade-offs, the reduction instruction set computer. The ARM Architecture: The Acorn RISC Machine, Architectural Inheritance, The ARM Programmer‘s Model.   \r\n UNIT II 12 Hours  \r\nARM Assembly Language Programming: Data Processing Instructions, Data Transfer instructions, Control Flow instructions, Writing Simple assembly language programs  \r\nARM Organization and Implementation: 3 – Stage Pipeline ARM Organization, 5-Stage pipeline ARM organization, ARM Instruction execution, ARM Implementation, The ARM coprocessor interface  \r\n UNIT III 10 Hours  \r\nThe ARM Instruction Set: Introduction, Exceptions, Conditional Execution, Branch and Branch with Link (B,BL), Software Interrupt (SWI), Data Processing Instructions, Multiply Instructions, Count Leading Zeros (CLZ – architecture v5T only), Single word and unsigned byte data transfer instructions, Half-word and signed byte data transfer instructions, Multiple register transfer instructions, SWP, Status register to general register transfer instructions, general register to status register transfer instructions, coprocessor instructions, coprocessor data transfers, coprocessor register transfers, Breakpoint instruction, Memory Faults, ARM architecture variants.  \r\n UNIT IV 10 Hours  \r\nARM Processor Cores: Arm9tdmi, Arm10tdmi, Discussion Memory Hierarchy: Memory Size And Speed, On-Chip Memory, Caches, Cache Design – An Example, Memory management. Exception and Interrupt Handling: Interrupts, Interrupt Handling Schemes.  \r\n UNIT V 10 Hours  \r\nArchitectural Support for System Development: The ARM memory interface, The Advanced Microcontroller Bus Architecture (AMBA), The ARM reference peripheral specification, Hardware System prototyping tools, The ARMulator, Signal Processing Support.   \r\nPESIT Student Handbook 2013-14 Computer Science III & IV………………………………………… 22    \r\nText book Text 1: ARM System-on-Chip Architecture, Steve Furber, 2nd Edition, Pearson Education 2000. Text 2: ARM System Developer’s Guide, Andrew N. SLOSS, Dominic SYMES, Chris WRIGHT, Elsevier Reprint 2010.  \r\nUNITS SECTIONS Unit I  Text 1: Chapter 1 & 2 (not including 1.4 & 2.4) Unit II  Text 1: Chapter 3, 4  Unit III  Text 1: Chapter 5 (not including 5.5, 5.21) Unit IV  Text 1: Chapter 9 & 10 (not including 9.1, 9.2)  Text 2: Chapter 9 (not including 9.1, 9.3.5 – 9.3.8) Unit V  Text 1: Chapter 8 (not including 8.6, 8.7, 8.8) ', 'CSE', 4, 'www.google.com'),
('Introduction to Microprocessor Laboratory', '4CS_IMPL', 1, 'INTRODUCTION TO MICROPROCESSOR LABORATORY (0-0-2-1)   \r\nProgram #1 Write a program for convolution of two sequences to compare the performance and complexity of the code with and without MLA instruction  \r\nProgram #2 Write an ALP to find the GCD (Greatest Common Divisor), with and without conditional execution of ARM.  Observe the difference, and power of conditional execution of ARM  \r\nProgram #3 Write a program to multiply two matrices. Compare the performance and complexity of the code with and without MLA instruction.  \r\nProgram #4 Implement a search algorithm (any searching algorithm)  \r\nProgram #5 Implement a sorting algorithm (any sorting algorithm)  \r\nProgram #6 Write a program to find str1 (sub string) is present in str2 (main string)  \r\nProgram #7 Implementation of I/O Port Programming  \r\nProgram #8 Implement a simple calculator using keypad and LCD display  \r\nProgram #9 Write a program to scan the keypad, assign own values to the keys and display the key pressed along with the row and column number.  \r\nProgram #10 I/O operation of ARM kit using GPIO LED port  \r\nProgram #11 Write a program to display   i) Stream of characters on LCD display left to right ii) 4 digit numerical values  on LCD display right to left  \r\nProgram #12 Write a program to interface seven segment displays through decoder ', 'CSE', 4, 'www.google.com'),
('Linear Algebra', '4CS_LA', 5, ' LINEAR ALGEBRA (5-0-0-5)  \r\nOBJECTIVE:   Linear Algebra deals with the analysis of systems of linear equations with the aid of matrices, vector spaces, linear transformations and so on. The course is discussed with algebraic as well as geometric perspectives.  A few numerical methods of solving linear systems of equations are also discussed which are indispensable tools in the hands of engineers. The course also covers principles of linear programming and the techniques of its applications in a manner that will suit the engineering students.   \r\n                                                               UNIT I                   14 Hrs Matrices and Gaussian Elimination: Geometry of system of linear equations, Gaussian Elimination, Matrix notation, Triangular factorization, Inverses and Transposes   \r\n                                                                UNIT II                                                     12 Hrs Vector spaces: Vector spaces, Subspaces, Linear Independence, Basis and Dimension and Fundamental Subspaces  \r\n                                                                 UNIT III                                                              13 Hrs    Linear Transformations and Orthogonality:                                                                               Linear transformations, Orthogonal subspaces, Inner Products, Projections and Least Squares Approximations.                                    \r\n                                                                  UNIT IV                                                                 12 Hrs   Orthogonalisation, Eigen Values and Eigen Vectors:                                                                                       Gram- Schmidt Orthogonalization, Eigen values and Eigen vectors, Power method of finding the dominant Eigen value and the corresponding Eigen vector, Diagonalization & Applications.   \r\n                                                                    UNIT V                                                                  14 Hrs Numerical solution of linear system of equations & LPP:                                                                                                    Iterative methods of solution:  Jacobi‘s iteration method, Gauss Seidel Iterative method. LPP: Formulation of the problem, Graphical method, General Linear Programming Problem, Canonical & Standard forms, Simplex Method.  \r\nReference Books:  \r\n1. Gilbert Strang, Linear Algebra and its applications, 4th edition, Thomson Brooks/Cole, 2nd Indian reprint 2007(Ch.nos.1, 2, 3 and 5) 2. B.S Grewal, Higher Engineering Mathematics 40th Edition, Khanna Publishers, 2005  (Ch. Nos. 2, 28, 33) ', 'CSE', 4, 'www.google.com'),
('Fluid Mechanics and Fluid Machinery Laboratory', '4CV_FML', 1, 'Fluid Mechanics and Fluid Machinery Laboratory\r\n\r\nLesson Plan\r\n\r\nSubject Code: 12CV258                              Faculty:  Prof.  CNR	    			           No. of Hours: 14\r\nExperiments	Portions to be Covered	Class\r\n	Introduction	1\r\n	Cycle 1	\r\n1	Determination of major losses in pipes	1\r\n2	Determination of minor losses in pipes	2\r\n3	Calibration of venturimeter	3\r\n4	Calibration of Orifice meter	4\r\n5	Calibration of nozzle meter 	5\r\n6	Calibration of notches ( 90º V Notch, Rectangular)	6\r\n	Cycle 2	\r\n7	Performance Analysis of single stage centrifugal pump	7\r\n8	Performance Analysis of multi-stage centrifugal pump	8\r\n9	Performance Analysis of Reciprocating pump	9\r\n10	Impact of Jets (Flat vane, Semi-circular Vane)	10\r\n11	Performance Analysis of Pelton Wheel	11\r\n12	Performance Analysis of Francis Turbine	12\r\n13	Performance Analysis of Kaplan Turbine	13\r\n	Laboratory Test	14\r\n\r\n', 'CV', 4, 'www.google.com'),
('Geotechnical Engineering I', '4CV_GE1', 4, 'Geotechnical Engineering I\r\nLesson Plan\r\n\r\nSubject Code: 12CV255            Faculty: Prof. Geethashree G Prasad        No. of Hours: 52\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 - 3	UNIT 1\r\n	Introduction: Types and Classification of soil	7	7\r\n4 - 9		Soil mass and Preliminary definitions: Interrelationships between soil properties. 	9	16\r\n10 - 12		Soil Tests: Determination of different soil properties.	7	23\r\n13 - 15	UNIT 2\r\n	Classification of soils: Purpose and types of classification	7	30\r\n16 – 22		Soil structure and soil water: Forces in Soil water, Types of Soil water	12	42\r\n23- 27	UNIT 3	Permeability and Seepage: Darcy’s law, Determination of permeability.	9	51\r\n28 - 32		Compaction of soil: Definition, Tests on compaction, Field compaction methods and control.	10	61\r\n33 - 35	UNIT 4	Compressibility of Soils: Definition, compression of laterally confined soil	6	67\r\n36 – 42		Consolidation of soils: Terzhaghi’s consolidation theory, Types of consolidation and its determination.	13	80\r\n43 - 45	UNIT 5	Shear strength of soil: Mohr’s circle, Mohr’s strength, Total and effective stress	7	87\r\n46 - 50		Measurement of shear parameters – Tests for the parameters.	10	97\r\n51 - 52		Pore pressure concepts.	3	100\r\n	\r\n\r\nReference Books:\r\n1.	“Soil Engineering; in theory and practice; Fundamentals and general principles”, Alam Singh, Vol 1, 4th Edition, CBS Publishers and Distributors Pvt. Ltd., 2012.\r\n\r\n2.	“Soil Mechanics and Foundations”, B.C.Punmia, Ashok Kumar Jain, Arun Kumar Jain.,16th Edition, Lakshmi Publications, New Delhi, 2005.\r\n\r\n3.	“Soil Mechanics and Foundation Engineering: Geotechnical Engineering Series”, Murthy V.N.S., 4th Edition, UBS Publishers and distributors, New Delhi, 2012.\r\n\r\n4.	“Geotechnical Engineering”, Venkatrahmaiah C., New Age International Publishers, New Delhi, 2011.\r\n\r\n', 'CV', 4, 'www.google.com'),
('Hydraulics and Machinary theory', '4CV_HMT', 4, 'HYDRAULICS & MACHINERY \r\nTHEORY\r\nLESSON PLAN\r\nSubject Code: 12CV253	              Faculty: Prof.  K Janardhana		       No. of Hours: 39 \r\nClass	Unit No	Portions to be Covered	% Portions Covered\r\n			Referred unit	Cumulative\r\n1 - 3	UNIT 1\r\n(8 hrs)\r\n	Dimensional analysis and model studies: Introduction, dimensions and systems of units, dimensional homogeneity, methods of dimensional analysis: Raleigh’s method, Buckingham’s ? theorem. Use of dimensional analysis, model investigation	8	8\r\n4 - 6		Similitude: geometric, kinematic and dynamic similarities, non-dimensional numbers and model laws: Reynold’s, Froude, Euler, Mach and Weber, distorted and undistorted models, merits and limitations, scale effect in models, numerical problems.	8	16\r\n6-8		Flow around submerged objects: Introduction to drag and lift, type of drag, flow past different object, dimensional analysis of drag and lift, drag on a flat plate and airfoil.	7	23\r\n9-13	UNIT 2\r\n(9 Hours)\r\n	Flow in open channels: Introduction, Types of flow in channels, geometric properties of rectangular, triangular, trapezoidal and circular channels. Velocity distribution in a channel section, uniform flow in channels: Chezy’s equation, Manning’s equation, Most economical open channels- rectangular, triangular, trapezoidal and circular channels, open channel sections for constant velocity, computation of uniform flow, specific energy and critical depth, critical flow and its computation, metering flumes: Venturi Flume, Standing wave flume, Parshall flume, practical channel sections, measurement of discharge in rivers.	12	35\r\n17		Numerical problems.	9	44\r\n18- 20	UNIT 3\r\n(6 Hours)\r\n	Impact of free jets on flat plates and curved vanes: Introduction, force exerted by fluid jet on a stationary flat plate and on a moving plate (normal and inclined cases),	7	51\r\n21 - 23		Impact of a jet on a series of flat plates mounted on the periphery of a wheel, conditions for maximum hydraulic efficiency. Force exerted by a jet on a stationary curved vane and moving curved vane (symmetrical case) and concept of velocity triangles, numerical problems.	8	59\r\n24-31\r\n	UNIT 4\r\n(10 Hours)\r\n	Hydraulic Turbines: Introduction, elements of hydroelectric power plant, head and efficiencies of hydraulic turbines, classification of turbines. Pelton Wheel - components, working, maximum power, efficiency, working proportions, design of Pelton turbine runner, Radial flow impulse turbine and reaction turbine, Francis Turbine: work done, efficiency, working proportions, design of Francis turbine runner, draft tube theory, Kaplan turbines: components, working proportions, governing of turbines, runaway speed and surge tank. 		15	74\r\n32-33\r\n		Performance of Turbines: Introduction, performance under unit head and specific conditions, specific speeds, performance characteristic curves, cavitation in turbines, selection of turbines.	11	85\r\n34 - 36	UNIT 5 \r\n  (6 Hours)\r\n	Centrifugal pumps:\r\nIntroduction, parts and working of centrifugal pump, types, work done by impeller, head of pump, losses and efficiencies.	6	91\r\n37-39		Minimum starting speed, specific speed, multistage centrifugal pumps (pumps in series and pumps in parallel), priming and numerical problems	9	100\r\n\r\nText Books: “Hydraulics and Fluid Mechanics including Hydraulic Machines (in SI Units)”, P.N. Modi and S. M. Seth, 19th Edition, Standard Book House, New Delhi	, 2013.\r\n', 'CV', 4, 'www.google.com');
INSERT INTO `course` (`course_name`, `course_id`, `credit`, `course_info`, `dep_id`, `sem`, `url`) VALUES
('Linear Algebra for civil', '4CV_LA', 5, ': LINEAR ALGEBRA (5-0-0-5)  \r\nOBJECTIVE:   Linear Algebra deals with the analysis of systems of linear equations with the aid of matrices, vector spaces, linear transformations and so on. The course is discussed with algebraic as well as geometric perspectives.  A few numerical methods of solving linear systems of equations are also discussed which are indispensable tools in the hands of engineers. The course also covers principles of linear programming and the techniques of its applications in a manner that will suit the engineering students.   \r\n                                                               UNIT I                   14 Hrs Matrices and Gaussian Elimination: Geometry of system of linear equations, Gaussian Elimination, Matrix notation, Triangular factorization, Inverses and Transposes   \r\n                                                                UNIT II                                                     12 Hrs Vector spaces: Vector spaces, Subspaces, Linear Independence, Basis and Dimension and Fundamental Subspaces  \r\n                                                                 UNIT III                                                              13 Hrs    Linear Transformations and Orthogonality:                                                                               Linear transformations, Orthogonal subspaces, Inner Products, Projections and Least Squares Approximations.                                    \r\n                                                                  UNIT IV                                                                 12 Hrs   Orthogonalisation, Eigen Values and Eigen Vectors:                                                                                       Gram- Schmidt Orthogonalization, Eigen values and Eigen vectors, Power method of finding the dominant Eigen value and the corresponding Eigen vector, Diagonalization & Applications.   \r\n                                                                    UNIT V                                                                  14 Hrs Numerical solution of linear system of equations & LPP:                                                                                                    Iterative methods of solution:  Jacobi‘s iteration method, Gauss Seidel Iterative method. LPP: Formulation of the problem, Graphical method, General Linear Programming Problem, Canonical & Standard forms, Simplex Method.  \r\nReference Books:  \r\n1. Gilbert Strang, Linear Algebra and its applications, 4th edition, Thomson Brooks/Cole, 2nd Indian reprint 2007(Ch.nos.1, 2, 3 and 5) 2. B.S Grewal, Higher Engineering Mathematics 40th Edition, Khanna Publishers, 2005  (Ch. Nos. 2, 28, 33) ', 'CV', 4, 'www.google.com'),
('Structural Analysis-I', '4CV_SA', 4, 'Class	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 - 3	UNIT 1\r\n	Introduction to structural analysis: Forms of structures, loads and forces: dead loads, imposed loads, load combination.	5	5\r\n4 - 6		Idealization of structures, supports and connections, elastic and linear behavior, principle of superposition. 	6	11\r\n7 - 9		Analysis of Determinate structures: Equations of equilibrium, free body diagram, sign convention, cables, equation of a cable, horizontal tension, tension in cables supported at different levels, length of cables, effect of change of temperature.	6	17\r\n10 - 12		Three hinged circular and parabolic arches with supports at same levels and different level.	6	23\r\n13 - 16	UNIT 2\r\n	Displacements – Geometric methods: Deflected shapes, moment area method, conjugate beam method. 	7	30\r\n17 – 20		Displacements – Energy methods: Introduction, forms of elastic strain energy, strain energy in members, energy relations: law of conservation of energy, virtual works. 	8	38\r\n21 - 24		Betti’s and Maxwell’s laws of reciprocal deflections, application of virtual work, deflection of trusses and frames, Castigliano’s Theorem I.	8	46\r\n25- 28	UNIT 3	Rolling Loads and Influence Lines: Introduction, Types of moving loads –Concentrated, Single, Pair, Multiple – UDL, longer than span and shorter than span, , 	8	54\r\n29- 32		Influence line diagrams-Reaction, BM, SF, Absolute maximum BM and SF	7	61\r\n33 - 35	UNIT 4	Analysis of Indeterminate Structures: Castiglino’s Theorem II (Minimum Strain Energy) – Propped cantilever, fixed beams.	5	66\r\n36 – 39		Theorem of three moments, derivation and application to the analysis of statically indeterminate beams.	7	73\r\n40 - 42		Analysis of Two hinged arches.	7	80\r\n43 - 46	UNIT 5	Slope Deflection Method: Development of slope and deflection equations.	9	89\r\n47- 52		Analysis of continuous beams, frames with and without lateral translation of joints.	11	100\r\n\r\nText books\r\n1.	“Basic Structural Analysis”, Reddy C. S, 3rd Edition, Tata McGraw Hill, New Delhi, 2012.\r\n2.	“Analysis of Structures”, Vazirani and Ratwani, 17th Edition, Khanna Publishers, 2012.\r\n\r\nReference books\r\n1.	“Structural Analysis”, Devadas Menon, Narosa Publishing House, Reprint 2012. \r\n2.	“Advanced Structural Analysis”, Devadas Menon, Narosa Publishing House, 2012.\r\n3.	“Structural Analysis”, Kini\r\n4.	“Introductory Structural Analysis”, Wang C.K, C.K.Wang, Prinitce Hall, 1981\r\n5.	 “Intermediates Structural Analysis”, Wang C.K, C.K.Wang, Tata McGraw Hill Publishing Co Ltd,     2011\r\n6.	“Structural Analysis”, Wilberg and Norms\r\n7.	“Structural Analysis”, Janakar\r\n', 'CV', 4, 'www.google.com'),
('Surveying Practice II', '4CV_SP2', 1, 'Surveying Practice II\r\nLesson Plan\r\nExpt. #	Class	Portions to be Covered\r\n1	1-2	Demo of Total station and measurement of angle and distance\r\n2	3 - 4	Set a station point and find coordinates of a geometric shape\r\n3	5 - 6	Change point and traverse – Three consecutive points\r\n4	7 – 8 	Measure the coordinates  of a large flat surface\r\n5	9 - 10	Plot the coordinates of experiment 4 using a software\r\n6	   11 - 12	Measure the coordinates of a sloping surface \r\n        7	   13 - 14	Plot the coordinates of experiment 6 using a software and draw Longitudinal section, Cross Section, calculate area and volume. \r\n8	   15 - 16	Find coordinates of a road alignment \r\n9	17 – 18	Stake out co-ordinates for experiment 8\r\n10	19 – 20	Usage of GPS Equipments – Locate coordinates of a given set of points\r\n11	21 – 22	Usage of GPS Equipments – Find a set of points for a given coordinate\r\n12	23 – 24	Usage of GIS Software\r\n13	25-26	Demo of advanced surveying instruments\r\nText books \r\n1.	”Surveying” Vol I, B. C. Punmia, Ashok K Jain, Arun K Jain, 16th Edition, Laxmi Publications, 2005\r\n2.	”Surveying” Vol II, B. C. Punmia, Ashok K Jain, Arun K Jain, 15th Edition, Laxmi Publications, 2005\r\n3.	”Higher Surveying” Vol III, B. C. Punmia, Ashok K Jain, Arun K Jain, 15th Edition, Laxmi Publications, 2005\r\n\r\nReference books\r\n1.	“Surveying Theory and Practice”, James Anderson, McGraw Hill\r\n2.	 “Plane Surveying” A. M. Chandra – New age international ( P) Ltd\r\n3.	“Higher Surveying” A.M. Chandra New age international (P) Ltd\r\n4.	“Fundamentals of Surveying”, Milton O. Schimidt – Wong, Thomson Learning.\r\n5.	“Fundamentals of Surveying”, S.K. Roy – Prentice Hall of India\r\n6.	“Surveying,” Arther Bannister et al., Pearson Education, India\r\n7.	Survey of India Publication on maps.\r\n8.	Google Maps and Usage.\r\n\r\n\r\nSubject Code: 12CV257	Faculty: Prof. PRP	                          No. of  Hours: 26\r\n', 'CV', 4, 'www.google.com'),
('Surveying Theory II', '4CV_ST2', 4, 'Surveying Theory II\r\nLesson Plan\r\nSubject Code: 12CV254	Faculty:  Prof. P R Priyanka	           No. of Hours: 52\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 – 5	UNIT 1\r\n\r\n	Curve Setting: Introduction to curves - simple circular curves, compound and reverse curves, transition curves and vertical curves. Parts of curves and their usage. Simple circular curves – necessity – types, simple curves -  numerical problems	9.6	9.6\r\n6 - 10		Designation of curves, setting out simple curves by linear methods - numerical problems\r\nSetting out curves by Rankine’s deflection angle method - numerical problems	9.6	19.2\r\n11 - 16	UNIT 2	Total Station : Electro Magnetic Distance Measurement: Introduction, electromagnetic waves, modulation, types of EDM instruments, principle of their working	9.6	28.8\r\n17 - 21		Salient features of total station, advantages of total station over conventional instruments, application of total station. – Numerical problems\r\n	9.6	38.4\r\n22 - 26	UNIT 3	Global Positioning System (GPS): Introduction, GPS principles, Satellite navigation System, GPS- Space segment.	11.5	50\r\n27- 31		Control segment, User segment, GPS satellite signals, Receivers, Static, Kinematic and Differential GPS	11.5	61.5\r\n32 - 38	UNIT 4	Introduction to Remote Sensing:  Idealized remote sensing system, basic principles of remote sensing, observation platforms and applications of remote sensing – Numerical problems	9.6	71.1\r\n39 - 44		Geographical Information System (GIS): Definition and components of GIS, four M’s, database and models, GIS packages and usage of GIS.	9.6	80.7\r\n45 - 49	UNIT 5	Photogrammetry:  Basic concepts of terrestrial photogrammetry and aerial photogrammetry	9.6	90.3\r\n50- 		Photo Theodolite  - horizontal & vertical angles, horizontal position, type of photographs and geometry of aerial photographs - Numerical problems	9.6	100\r\nText books\r\n1.	”Surveying”, Vol I, B. C. Punmia, Ashok K Jain, Arun K Jain, 16th  Edition, Laxmi Publications, 2005.\r\n2.	”Surveying”, Vol II, B. C. Punmia, Ashok K Jain, Arun K Jain, 15th  Edition, Laxmi Publications, 2005\r\n3.	”Higher Surveying”, Vol III, B. C. Punmia, Ashok K Jain, Arun K Jain, 15th  Edition, Laxmi Publications, 2005\r\n4.	Remote Sensing and GIS – M Anji Reddy, BS Publications/BSP Books, 2012\r\n5.	Remote Sensing and Image Interpretation – : Jonathan W. Chipman, Thomas M. Lillesand, Ralph W. Kiefer, Wiley, 2007\r\n\r\nReference books\r\n1.	“Surveying Theory and Practice”, James Anderson, McGraw Hill\r\n2.	 “Plane Surveying”, A. M. Chandra, New age international ( P) Ltd\r\n3.	“Higher Surveying”, A.M. Chandra, New age international (P) Ltd\r\n4.	“Fundamentals of Surveying”, Milton O. Schimidt, Wong, Thomson Learning.\r\n5.	“Fundamentals of Surveying”, S.K. Roy, Prentice Hall of India\r\n6.	“Surveying”, Arther Bannister et al., Pearson Education, India\r\n7.	Survey of India Publication on maps\r\n8.	Google Maps, Google Earth\r\n9.	Elements of Photogrammetry – Paul R Wolf, McGraw International\r\n\r\n\r\n', 'CV', 4, 'www.google.com'),
('Compiler Design', '5CS_CD', 4, ' COMPILER DESIGN (4-0-0-4)  \r\nOBJECTIVE: The course is designed for students to understand the working of a generic compiler. In the process, students shall be able to understand, design and implement a lexical analyzer, a parser, code generation schemes and also optimization of codes and its runtime environment.   \r\n                                                                          UNIT I           14 Hrs  \r\nAssemblers: Basic Assembler Functions, Assembler Algorithm and Data Structures for a 2–Pass Assembler, Machine Dependent Assembler Features, Machine Independent Assembler Features Compilers: Language Processors, The Phases of a Compiler, Cousins of the Compiler, The Grouping of Phases, Compiler–Construction Tools. Lexical Analysis: The Role of the Lexical Analyzer, Input Buffering, Specification of Tokens, Recognition of Tokens, A Language for Specifying Lexical Analyzers, Design of a Lexical Analyzer Generator. Syntax Analysis: The role of the Parser, Context–Free Grammar, Writing a Grammar, Top–Down Parsing, Bottom–Up Parsing, LR Parsers, SLR Parser, LALR Parser, CLR Parser.   \r\n                                                                          UNIT II                                                           08 Hrs  \r\nIntermediate–Code Generation: Declarations, Storage Layout for Local Names, Boolean Expressions, Switch–Statements. Run–Time Environments: Storage Organization, Stack  Allocation of Space, Access to Nonlocal Data on the Stack, Data Access without Nested Procedures, Issues with Nested Procedures, Nesting Depth, Access Links.                                                                           UNIT III                                                           10 Hrs  \r\nSyntax-Directed Translation: Syntax-directed definitions, Construction of syntax trees, Bottom-up evaluation of S-attributed definitions, L-attributed definitions, Top-down translations, Bottom-up evaluation of inherited attributes.  \r\n                                                                          UNIT IV                                                           10 Hrs  \r\nCode Generation: Issues in the design of a Code Generator, The Target Language, and Addresses in the Target Code: Static allocation, Stack allocation, Run–Time Addresses for Names, Basic Blocks, Next–Use Information, Flow Graphs, Loops, the DAG Representation of Basic Blocks, and Finding Local Common Sub expression.  \r\n                                                                          UNIT V                                                            10 Hrs  \r\nMachine Independent Optimization: Causes of Redundancy, Global Common Sub expression, Copy Propagation, Dead Code Elimination, The Data–Flow Abstraction, The Data–Flow Analysis Schema, Data–Flow Schemas on Basic Blocks, Live–Variable Analysis. Loaders & Linkers: Basic Loader Functions, Machine–Dependent Loader Features, Machine– Independent Loader Features, Dynamic Linking.   \r\nTextbook: T1: Alfred Aho, Monical Lamb, Ravi Sethi and J D Ullman, “Compilers – Principles, Techniques and Tools”, Pearson Education 2nd Edition 2009. \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 10     \r\nUNIT# Sections \r\nUNIT – I T1:1.1-1.6, 3.1-3.5, 3.8 \r\nUNIT – II T1: 4.1 - 4.7, 4.9 \r\nUNIT – III T1: 5.1-5.6 \r\nUNIT – IV T1: 7.1-7.3, 7.5, 7.8 \r\nUNIT – V T1:8.1-8.5, 9.1-9.2, 9.4-9.5, 9.8, 10.1-10.4 \r\nT2: Leland L.Beck, D. Manjula System Software, An Introduction to Systems Programming, Pearson Education 3nd Edition 2007. ', 'CSE', 5, 'www.google.com'),
('Compiler Design Laboratory', '5CS_CDL', 1, ' COMPILER DESIGN LABORATORY (0-0-2-1)  \r\nLIST OF PROGRAMS   \r\nPart A  \r\nExecute the following programs using LEX:  \r\n1. Convert the upper case characters to lower case characters in a file. 2. Display the ASCII values of non-printing characters which are present in a file. 3. Count number of characters, words, lines, and spaces in a given file. 4. Count the number of comment lines in a given C program. Also eliminate them and copy the resulting program into a separate file. 5. Convert an octal number to its equivalent decimal number. 6. Recognize and count the number of identifiers in a given input file.   \r\nExecute the following programs using YACC:  \r\n1. Recognize IF control statements and display number of levels of nesting. 2. Recognize a valid variable name, which starts with a letter, followed by any number of letters or digits? 3. Check whether the given string an bm (n>0, m>=0) is accepted by the grammar or not. 4. Check for the validity of a given arithmetic expression. 5. Evaluate an arithmetic expression involving operators +, -,   and /. 6. Check whether the given string an bn (n>0) is accepted by the grammar or not.   \r\nPart B   \r\nExecute the following programs using ANTLR:  \r\n1. Combined grammar for implementing simple calculator. 2. Check whether the given sentence in English is valid or not. 3. Implement input construct in C/Java language. 4. Write a combined grammar to implement output construct in C/Java language. 5. Write a combined grammar to implement ASSIGNMENT construct in C++ language. 6. Write a combined grammar to implement FOR construct in FORTRAN / C++ language.     \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 15   \r\nPart C (Mini Projects)  \r\nProject#1a \r\nDevelopment of Lexical analyzer for C, C++, Python, FORTRAN, PASCAL or any other programming language. \r\nProject#1b \r\nDevelopment of Lexical analyzer for HTML, XML, Perl, PHP or any other scripting language. Project#2 Development of Parser / code optimizer for any programming / scripting language. Project#3 Development of Syntax directed translator / semantic analyzer for any language.', 'CSE', 5, 'www.google.com'),
('Computer Networks-I', '5CS_CN1', 4, ' COMPUTER NETWORKS 1   (4-0-0-4)  \r\nOBJECTIVES:  Computer Networks are the inevitable part of modern information technology. Society is so much dependent on the internet. The applications used are browsing, email, chatting, tele-talking, video conferencing, social networking and list grows. Yes. When we type an address like www.gmail.com, with in a few seconds, the home page is displayed magically. But real magic is the spectrum of heterogeneous networks and protocol behind the scene. This subject is to expose the core principles of computer networks so that the student is geared up to enter into what is known as Information Communication Technology industry. Subject is divided into 2 parts namely Computer Networks-1 in 5th semester and Computer Networks-2 in 6th semester. Top down approach is followed, in the sense; part 1 will cover overview of networks followed by application and transport layer aspects. Part 2 will cover network layer, link layer, local area networks and Multimedia networking.  \r\nUNIT I         12 Hrs  \r\nIntroduction to Computer Networks and internet: Basics of Communication Networks: Building blocks, Types of networks: Telephone Networks, fixed and mobile, Switching techniques, Layered architecture, Services and standards, Performance   \r\nUNIT II        10 Hrs  \r\nPrinciples of Network Applications: Network Application Architectures, Application layer protocols, Services by Internet Transport Protocols, The Web and HTTP: HTTP overview, Nonpersistent and persistent connections, Message format, Cookies, Web Caching, and File Transfer Protocol UNIT III        12 Hrs  \r\nE-mail: Building blocks, SMTP, Mail message format, Mail access protocols, DNS: Services, how DNS works, DNS Records and messages, P2P File sharing, Socket Programming, Creating network applications  \r\nUNIT IV         10 Hrs  \r\nTransport-Layer: Introduction and Transport Layer services, Multiplexing and demultiplexing, Connectionless transport-UDP, Principles of Reliable Data Transfer, Stop-and-Wait, Go-back-N and selective Repeat   \r\nUNIT V         8 Hrs  \r\nConnection oriented Transport-TCP: TCP connection management, Segment structure, Reliable data transfer, Flow control, Principles of congestion control    \r\nReference books: T1: Computer Networking (A Top-down approach), James F Kurose, Keith W Ross -6th Edition Pearson T2: Computer Networks (A Top-down Approach)-Special Indian Edition, Behrouz A Forouzan, Firouz Mosharraf-TMcGraw Hill  \r\nReference: relevant RFCs \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 6    \r\nUNIT 1: T1- Chapter#1, Sec 1.1 to 1.8 UNIT 2: T1- Chapter#2, Sec 2.1 to 2.3 UNIT 3: T1-Chapter#2, Sec 2.4 to 2.7 UNIT 4: T1-Chapter#3, Sec 3.1 to 3.4 UNIT 5: T1-Chapter#4, Sec 3.5 to 3.6', 'CSE', 5, 'www.google.com'),
('Operating Systems', '5CS_OS', 4, ' OPERATING SYSTEMS (4-0-0-4)  \r\nOBJECTIVE  This course provides an overview of an operating system - the critical software that enables users and application programs to make effective use of computer hardware. The course focuses on fundamental problems and optimal solutions for process scheduling and synchronization, deadlock detection and prevention and memory management. It also introduces the design of a file system on secondary storage and introduces advanced concepts such as real-time operating systems. The concepts are illustrated through a case study using the Linux operating system.   \r\n UNIT I 10 Hours  \r\nOperating System Overview: Operating System Objectives and Functions, The Evolution of Operating Systems, Major Achievements, Characteristics of Modern Operating Systems, Windows Vista Overview, Traditional UNIX Systems, Modern UNIX Systems, Linux. Processes: What is a Process? Process States, Process Description, Process Control, Execution of the Operating System, Security Issues Threads, SMP and Microkernels: Processes and Threads, Symmetric Multiprocessing (SMP), Microkernels.  \r\n UNIT II 12 Hours  \r\nConcurrency- Mutual Exclusion and Synchronization: Principles of Concurrency, Mutual Exclusion – Hardware Support, Semaphores, Monitors, Message Passing, Readers/Writers Problem Concurrency- Deadlock and Starvation: Principles of Deadlock, Deadlock Prevention, Deadlock Avoidance, Deadlock Detection, an Integrated Deadlock Strategy, Dining Philosophers Problem.  \r\n UNIT   III 12 Hours  \r\nMemory Management: Memory Management Requirements, Memory Partitioning, Paging, Segmentation, Security Issues. Virtual Memory: Hardware and Control Structures, Operating System Software.  \r\n UNIT IV 10 Hours  \r\nUniprocessor, Multiprocessor and Real-Time Scheduling: Types of Scheduling, Scheduling Algorithms, Multiprocessor Scheduling, Real-Time Scheduling. I/O Management and Disk Scheduling: I/O Devices, Organization of the I/O Function, Operating System Design Issues, I/O Buffering, Disk Scheduling, RAID, Disk Cache.   \r\n UNIT V 08 Hours  \r\nFile Management: Overview, File Organization and Access, File Directories, File Sharing, Record Blocking, Secondary Storage Management, File System Security \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 8     \r\nText book T1. Operating Systems-Internals and Design Principles, William Stallings, 6th Edition, Pearson Education, 2009.   \r\nUNIT#              Sections  \r\nUNIT – I        Ch 2.1 – Ch 2.8, Ch 3.1 –Ch 3.6, Ch 4.1 – Ch 4.3 UNIT – II       Ch 5.1 – Ch 5.6, Ch 6.1 – Ch 6.6 UNIT – III      Ch 7.1 – Ch 7.5, Ch 8.1 – Ch 8.2 UNIT – IV      Ch 9.1 – Ch 9.2, Ch 10.1 – Ch 10.2, Ch 11.1 – Ch 11.7 UNIT – V       Ch 12.1 – Ch 12.7', 'CSE', 5, 'www.google.com'),
('Python Application Programming', '5CS_PAP', 4, ' PYTHON APPLICATION PROGRAMMING   (4-0-0-4)   \r\nOBJECTIVE: To provide a clear understanding of programming in Python Language, various programming domains, using of Python libraries in these domains, Pre-requisite: knowledge of programming, knowledge of Object Orientation  \r\n                                                                     UNIT – I                                                      12 Hours  \r\nIntroduction – program structure – output function – variable, type, id – operators and expressions – polymorphic operators - control structures – input function – quotes. Data structures – str, list, tuple, dict, set Nested data structures Sequence, iterable, range function  Files and directory operations                                                                       UNIT – II                                                    10 Hours  \r\nUser defined functions - variable number of arguments, default parameters, key value pairs as arguments – recursion – closure and decorator  List comprehension Class – objects – constructor – destructor – member function – slots – static members – property – inheritance  Exception handling – try, except, else, finally blocks – scope of try – nested blocks – raising exceptions – user defined exception – finding stack trace.  \r\n                                                                       UNIT – III                                                    10 Hours  \r\nRegular expression, Compiler design tool, Database programming, Multithreading  \r\n                                                             UNIT – IV                                                   10 Hours  \r\nGUI programming, Networking, Internet client programming  \r\n                                                             UNIT – V                                                    10 Hours  \r\nWeb clients & Servers, Web programming, Web Services, Introduction to Natural Language Processing  \r\nText Books: 1.  Core Python Programming :  Wesley J Chun – Pearson Education – second edition - 2007 2. Core Python Applications Programming : Wesley J Chun – Pearson Education – third edition -  2013 Reference: Python Tutorial : Rossum', 'CSE', 5, 'www.google.com'),
('Python Application Programmimg Laboratory', '5CS_PAPL', 1, ' PYTHON APPLICATION PROGRAMMING LABORATORY       (0-0-2-1)  \r\n  1. Experiment with control structures to generate some pattern 2. Experiment to play with nested data structures 3. Experiment to traverse a directory and operate upon the files in that directory   4. Experiment with user defined functions with closures and decorators 5. Experiment with classes – introduce functions on the fly 6. Experiment with exception handling mechanism with user defined handlers to generate log files  \r\n            Two small projects involving the concepts of Units 3, 4, 5 ', 'CSE', 5, 'www.google.com'),
('Principles of Programmimg Language', '5CS_PPL', 4, 'PRINCIPLES OF PROGRAMMING LANGUAGES (4-0-0-4)  \r\nOBJECTIVE: \r\nProgramming languages are the primary tools of the software professional. Software is often produced by a group of people and must be maintained by other professionals. Thus, programs must run efficiently and be expressive---they must be lucid descriptions of a problem solution. The languages that programmers use are constantly changing, and the popular languages of today will surely be replaced by new ones. The objective of this course is to provide students with a working knowledge of the basic principles underlying the design of all computer programming languages. Students completing this course should be able to quickly learn to effectively use new computer programming languages. In particular, after taking this course students should be able to do the following: \r\n? Appreciate the philosophy behind the  language constructs ? Master learning a new language ? Understand the implementation issues in language design \r\n UNIT I 12 Hours   \r\nPreliminary Concepts: Reasons for studying, concepts of programming languages, Programming domains, Language Evaluation Criteria, influences on Language design, Language categories, Programming Paradigms – Imperative, Object Oriented, functional Programming , Logic Programming. Programming Language Implementation – Compilation and Virtual Machines, programming environments  \r\nSyntax and Semantics: general Problem of describing Syntax and Semantics, formal methods of describing syntax - BNF, EBNF for common programming languages features, parse trees, ambiguous grammars, attribute grammars, denotational semantics and axiomatic semantics for common programming language features.  \r\nNames, Binding, Type Checking and Scopes: Names, Variables, Binding: Binding of Attributes to variables, Type bindings, Type Inferencing, Type Checking, Strong Typing, Type Equivalence, Scope, Scope and Lifetime, Referencing Environments, Named Constants.  \r\n UNIT II 12 Hours  \r\nData types: Introduction, primitive, character, user defined, array, associative, record, union, pointer and reference types, design and implementation uses related to these types. Names, Variable, concept of binding, type checking, strong typing, type compatibility, named constants, variable initialization  \r\nExpressions and Statements: Arithmetic relational and Boolean expressions, Short circuit evaluation mixed mode assignment, Assignment Statements, Control Structures – Statement Level, Compound Statements, Selection, Iteration, Unconditional Statements, and guarded commands.   \r\n UNIT III 12 Hours  \r\nSubprograms and Blocks: Fundamentals of sub-programs, Scope and lifetime of variable, static and dynamic scope, Design issues of subprograms and operations, local referencing environments, \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 12   \r\nparameter passing methods, overloaded sub-programs, generic sub-programs, parameters that are sub-program names, design issues for functions user defined overloaded operators, co routines,  Closures: Object closures and Function closures.  \r\nAbstract Data types: Abstractions and encapsulation, introduction to data abstraction, design issues, language examples: C++, Java, Ruby, and Parameterized ADT: C++, Java, Encapsulation constructs, Support for object oriented programming in C++, Java, Python (Ruby),   \r\n UNIT IV 08 Hours  \r\nConcurrency: Subprogram level concurrency, semaphores, monitors, message passing, Java threads, Python threads, PThreads.  \r\nException handling: Exceptions, Specifications, Exception Propagation, Exception handlers in Python, C++ and Java.  \r\n UNIT V 08 Hours  \r\nLogic Programming Language: Introduction and overview of logic programming, basic elements of prolog, application of logic programming.  \r\nFunctional Programming Languages: Introduction, fundamentals of FPL, LISP, Haskell, application of Functional Programming Languages and comparison of functional and imperative Languages.      \r\nText book T1: Concepts of Programming Languages Robert .W. Sebesta 8/e, Pearson Education.   Reference books R1. Programming Language Pragmatics –Michael L. Scott, Third Edition, and Elsevier. R2. Programming Languages Design and Implementation – Pratt and Zelkowitz, Fourth Edition PHI/Pearson Education', 'CSE', 5, 'www.google.com'),
('Principles of Programming Languages Laboratory', '5CS_PPLL', 1, ' PRINCIPLES OF PROGRAMMING LANGUAGES LABORATORY (0-0-2-1)  \r\nProgram #1 Examine name and scope: - static variables in „C? - Call resolution in C++  & Java - mangling of names in C++  \r\nProgram #2 Examine garbage and memory leak in C / Java         -        Develop a mechanism to avoid/detect memory leak          Program #3 Examine assignment operation  - assignment of arrays in Java - assignment of lists in Python - assignment of structures in C/C++  \r\nProgram #4 Examine goto statement - scope of goto in „c? - jump into/out of the block - non-local goto.  \r\nProgram #5 Examine callbacks - callbacks in C/C++ - interface and inner classes in Java  \r\nProgram #6 Examine closure - in python - in C/C++  \r\nProgram #7 Examine functions - variable number of arguments in C - variable number of arguments in Java - variable number of arguments in Python  \r\nProgram #8 Examine functions - tail recursion (in LISP) - keyword parameter in python - stack smashing in „C?  \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 17   \r\nProgram #9 Examine Generics - Generics in Java  \r\nProgram #10 Examine inheritance - Multiple inheritance in Python - Downcasting in Java   \r\nProgram #11 Examine pattern matching  - python  \r\nProgram #12 Examine Java thread model / pthread / Python - racing - synchronization - interthread communication - Thread local storage ', 'CSE', 5, 'www.google.com'),
('Computer Networks-II', '6CS_CN2', 4, ' COMPUTER NETWORKS II (4-0-0-4)  \r\nOBJECTIVES:  This is the second part of the subject-Computer Networks, started in 5th semester. This subject covers the core principles of network layer namely routing, forwarding, addressing. IPV4 is covered in detail followed by IPV6 protocol. An insight into Local area Networks, Wireless and mobile networks and multimedia communication network is brought out. The theory course id blended with a laboratory component where students can simulate, analyze the networks and protocols. They also write programs to implement some of the protocols and algorithms.   \r\nUNIT I          12 Hrs  \r\nIntroduction, Virtual circuit and Datagram Networks, What is inside a Router? IPV4: Addressing, Subnetting, Datagram format, Associated protocols ICMP, ARP, DHCP  \r\nUNIT II          12 Hrs  \r\nIPV6, Routing algorithms : Link state routing algorithm, Distance vector routing algorithm, RIP, OSPF, BGP, Forwarding , Broadcast & Multicast routing   \r\nUNIT III          10 Hrs  \r\nThe link layer and Local Area Networks Link Layer Services, Error detection and correction techniques, introduction to MAC , Local Area Networks : Building blocks, Switched LANs, Ethernet, VLANs, MPLS, Data centre Networking .  \r\nUNIT IV          08 Hrs  \r\nWireless & Mobile Networks: Basic principles, Wi-Fi LAN: The 802.11 architecture, MAC protocol, Frame, Overview of cellphone networks: architecture, Standards and technologies, Mobile IP  \r\nUNIT V           10 Hrs  \r\nMultimedia Networking, Properties of Video, Properties of Audio, UDP Streaming, HTTP Streaming, Internet Telephony with Skype, Protocols for Real-Time Interactive Applications: RTP, SIP, Case study : YouTube  \r\nReference books: T1: Computer Networking (A Top-down approach), James F Kurose, Keith W Ross -6th Edition Pearson T2: Computer Networks (A Top-down approach)-Special Indian Edition, Behrouz A Forouzan, Firouz Mosharraf-TMcGraw Hill  \r\nReference: relevant RFCs UNIT 1: T1- Chapter#4, Sec 4.1 to 4.4 UNIT 2: T1- Chapter#4, Sec 4.4 to 4.7 UNIT 3: T1-Chapter#5, Sec 5.1 to 5.5 UNIT 4: T1-Chapter#6   Sec 6.1 to 6.3 UNIT 5: T1-Chapter#7 Sec 7.1 to 7.3 ', 'CSE', 6, 'www.google.com'),
('Computer Networks-II Laboratory', '6CS_CN2L', 1, ' COMPUTER NETWORKS II LABORATORY (0-0-2-1)  \r\nPART-A - SIMULATION \r\nSimulation #1 Design, simulate and test basic Local Area Network using Hubs & Ethernet Switches. Simulation #2 Simulate & test DHCP based – WiFi LAN. Simulation #3 Simulate & test static router based Wide Area network. Simulation #4 Simulate & test dynamic router based Wide Area network. Simulation #5 Simulate, analyze the standard protocols of a typical internet.  \r\nPART-B- ANALYSIS  \r\nAnalysis #1 Troubleshoot and repair a mis-configured network  Analysis #2 Analyze the different protocols of a live internet using the protocol analyser-Wireshark.  \r\nPART-C- PROGRAMMING  \r\nProgram #1 Write programs to create TCP and UDP sockets. Program #2 Write a program to implement a simple web server. Program #3 Write a program to implement web client  Program #4 Write a program to implement Distance Vector Routing. Program #5  Write programs to implement ARQ protocols', 'CSE', 6, 'www.google.com'),
('Data Mining', '6CS_EA01', 4, ' DATA MINING (4-0-0-4)  \r\nOBJECTIVE: The objective of this course is to enable students to understand and apply concepts and algorithms in Data Mining.  The course covers Data Preprocessing, Data Warehousing, OLAP technology, Frequent Patter Mining, Classification, Cluster Analysis, Outlier Detection, and Current Research in the field.  \r\nUNIT I 10 Hours  \r\nIntroduction, Data Preprocessing, Data Warehousing, OLAP, Data Cubes: Introduction to Data Mining, Descriptive Data Summarization, Data Cleaning, Data Integration and Transformation, Data Discretization, Data Warehousing, Multi-dimensional data models, Data Cube Technology  \r\nUNIT II 10 Hours  \r\nFrequent Pattern Mining: Basic Concepts, Apriori Algorithm, FP Growth Algorithm, Pattern Evaluation Methods, Advanced Pattern Mining  \r\n UNIT III 12 Hours  \r\nClassification: Basic Concepts, Decision Trees, Bayesian Classification, Model Evaluation and Selection, Improving Classification Accuracy, Bayesian Belief Networks, Neural Networks, Support Vector Machines, Advanced Classification Methods  \r\n UNIT IV 10 Hours  \r\nCluster Analysis: Basic Concepts, Partitioning Methods (k-Means, k-Medoids), Hierarchical Methods, Density Based Methods, Grid Based Methods, Clustering Evaluation, Advanced Cluster Analysis  \r\n UNIT V 10 Hours  \r\nAdditional Topics and Current Research: Outlier Detection, Mining Massive Data Sets, Data Mining Applications, Current Trends and Research in Data Mining  \r\nTextbook  \r\nData Mining Concepts and Techniques, Jiawei Han, Micheline Kamber, and Jian Pei,  3rd Edition, Elsevier/Morgan Kaufmann Publishers, 2012.  \r\nUNIT# Sections  \r\nUNIT – I Chapters 1- 5 UNIT – II Chapters 6, 7 UNIT – III Chapters 8, 9 UNIT – IV Chapters 10, 11 UNIT - V Chapters 12, 13 ', 'CSE', 6, 'www.google.com'),
('Storage Area Networks', '6CS_EA02', 4, ' STORAGE AREA NETWORKS (4-0-0-4)   \r\nObjective: The objective of the course is to introduce students to the current storage technologies. Different aspects of SAN subsystems are covered. The course will equip students with better appreciation of SAN technology, its advantages, complexities and an idea as to which situations it can be gainfully utilized. Related technologies like RAID, Network Attached Storage are discussed. Architecture, Virtualization and Management aspects are delved. Key considerations like Security are covered in great detail.  \r\nUnit 1: Introduction & Intelligent Disk Subsystems                                                       8 HOURS            Server Centric IT Architecture and its Limitations; Storage – Centric IT Architecture and its advantages; Case study: Replacing a server with Storage Networks, The Data Storage and Data Access problem; The Battle for size and access. Architecture of Intelligent Disk Subsystems; Hard disks and Internal I/O Channels; JBOD, Storage virtualization using RAID and different RAID levels; Caching: Acceleration of Hard Disk Access; Intelligent disk subsystems, Availability of disk subsystems. Tutorial 1   \r\nUnit 2: I/O Techniques                                                                                                     10 HOURS  \r\nThe Physical I/O path from the CPU to the Storage System; SCSI: SCSI Basics, SCSI and Storage Networks. Fibre Channel Protocol Stack: Links, Ports and Topologies,FC-0:Cables,plugs and signals, encoding, FC1:8b/10b encoding, ordered sets and link control protocol, FC-2:Data Transfer,FC-3:common services, Link services: login and addressing, Fabric Services: name server and co,FC-4: ULPs: application protocols Fibre Channel SAN: Point-to-point topology, Fabric topology, Arbitrated loop topology, Hardware components for Fibre Channel SAN, InterSANs, Interoperability of Fibre Channel SAN IP Storage: IP Storage Standards-iSCSI, iFCP,mFCP,FCIP and iSNS. TCP/IP and Ethernet as I/O technology; Migration from SCSI and Fibre Channel to IP storage Tutorial 2  \r\nUnit 3: File Systems and Network Attached Storage (NAS)                                           8 HOURS  \r\nFile System and NAS: Local File Systems; Network file Systems and file servers: Basic Principles, NAS, Performance Bottleneck in file servers, Acceleration of NFS. Case Studies and Comparisons: Direct Attach File Systems, Shared Disk file systems; Comparison of fibre Channel and NAS. Putting Storage on Network: The NAS Architecture, The NAS hardware Architecture, The NAS Software Architecture, Network connectivity, NAS as a storage system Tutorial 3  \r\nUnit 4: SAN Architecture and Storage Virtualization                                                   12 HOURS  \r\nCreating a Network for storage: Overview, Network Part, Software part, Hardware part, Connectivity part, and SAN configuration; SAN Hardware devices; The fibre channel switch; Host Bus Adaptors; Putting the storage in SAN; Fabric operation from a Hardware perspective. Software Components of SAN: The switch?s Operating system; Device Drivers; supporting the switch?s components Configuration options for SANs: Connecting to data center, Evolving Network Connections, Evolving Device Connections. Storage Virtualization: Definition of Storage virtualization; Implementation Considerations; Storage virtualization on Block or file level; Storage virtualization on various levels of the storage Network; Symmetric and Asymmetric storage virtualization in the Network. Tutorial 4  \r\nUnit 5: Introduction to SAN Management                                                                     14 HOURS \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 34    \r\nPlanning Business Continuity: Defining the Environment(Putting Storage in Control), The Role of Storage Networking in Business Continuity, Redundancy and Costs, Storage Design and Implementation of Business Continuity Plan Managing availability: Availability Metrics,  ,Implementing the plan, Finding the holes, Closing the Loop Managing Serviceability: Tracking the configuration, Investigating the changes, Closing the loop on Serviceability. Capacity planning: Developing a plan for storage, the storage analysis, Modeling Performance and Capacity Requirements, Implementing the Plan, Closing the loop. Security considerations: Information Security, Security Methods, Storage Security Technologies, Storage Security Challenges, Fiber Channel SAN Security, NAS Security, Best Practices.    \r\nText Books: T1. Ulf Troppens, Rainer Erkens and Wolfgang Muller: Storage Networks Explained, Wiley India, 2007. T2: Robert Spalding: “Storage Networks The Complete Reference”, Tata McGraw-Hill, 2003  \r\nReference Books: R1: Information Storage and Management (Ver 3.0) EMC R2: Richard Barker and Paul Massiglia: “Storage Area Network Essentials A Complete guide to understanding and Implementing SANs”, Wiley India, 2006. ', 'CSE', 6, 'www.google.com'),
('Software Engineering', '6CS_SE', 4, ' SOFTWARE ENGINEERING (4-0-0-4)    \r\nOBJECTIVE: The objective of the course is to teach students software engineering concepts. Students will evolve from writing small programs to understanding software engineering skills and techniques and build capabilities to make great software products.   \r\nUNIT I 12 Hours  \r\nIntroduction to Software Engineering: Understand the context of Software Engineering; Contrasting System Development, Product development, Software products, project engineering; Generic Process framework ,Phases in the development of software, Product life cycle Phases, roles in product development; product development eco-system, Introduction to Software development models including waterfall model, Incremental model, Evolutionary model, Agile model etc.   \r\nUNIT II  10 Hours  \r\nSoftware Project Management Overview & Requirement Management Planning a software development project with overview of different aspects of SE management and process maturities Requirements Engineering: Requirements Engineering tasks, Initiating the requirement engineering process,  Requirements elicitation process & techniques, analysis considering information, functional, behavioral domains perspectives, negotiations, validation and firm up, Requirements documentation/specification and management, Requirements traceability  \r\nUNIT III 10Hours  \r\nAnalysis, Design &Implementation Engineering& Change/Build management: System Modeling: Analysis of the requirements with different perspectives/various modeling techniques. Software Architecture: Software Architecture, Software Life cycle, Architecture Design, Architectural Views, Architectural Styles ,The Unified Modeling Language, Design & Implementation Engineering: Classical design Methods, Object Oriented analysis and Design Methods, Design patterns, Service Orientation: service descriptions and service communication, service oriented architecture. Implementation: Coding standards & guidelines, code Review/Peer Review. Patching and patch management. Change & Build Management: Elements of a Configuration Management Systems, Baselines, Repository, The SCM process, Configuration Management Plan, Management of code versions, release versions. Exposure to code management tools/Build.  \r\nUNIT   IV 12 Hours  \r\nSoftware Testing& Quality Software Testing: Test Objectives, Testing and the Software Life cycle, Testing Strategies, Verification and Validation, Planning and Documentation, Manual test Techniques, Coverage Based Test Techniques, and Fault based test techniques, Error Based Test Techniques, Comparison of Test Techniques, Test Stages, and Estimating Software Reliability Software Quality: Managing Software Quality, taxonomy of Quality attributes; perspectives on quality, the quality system, Software Quality assurance, The Capability Maturity Model, Personal Software Process \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 26      \r\nUNIT V 8 Hours  \r\nSW Quality & Other Eng. Topics CBSE, Software Metrics, Software Engineering in a global environment, Software Estimation, Software Engineering & Hacking, Ethics in Software Engineering  \r\nText book T1. Software Engineering: Principles and Practice, Hans Van Vliet, 3rd, Wiley India, Reprint 2010  T2: Software Engineering (A practitioners approach), Roger S Pressman, 6th Edition R1: Software Engineering, Ian Somerville, 9th Edition, Pearson Education, 2009  \r\nUNIT 1:   T1: Ch 1 - Ch 3                T2: Ch 1 - Ch 4 R1: Ch 1 - Ch 3 UNIT 2 T1: Ch 2&Ch 9  T2: Ch 21&Ch 7 R1: Ch 22, 23, 24, 26&Ch 4 UNIT 3 T1: Ch 10, Ch 11, Ch 4 Ch 12.2-12.5 Ch 19.1-19.2       T2:  Ch 5.4,8, Ch 9, Ch 10 R1: Ch 5.1-5.5,6.1-6.4 UNIT 4 T1: Ch 13, Ch 14 & Ch 6      T2: Ch 13, Ch 14 & Ch 26     R1:  Ch 8 and Ch 24 UNIT 5 Slides * No of hours of each unit includes the hours for class room tutorials/exercises relevant to each of the topics', 'CSE', 6, 'www.google.com'),
('Unix System Programmimg', '6CS_USP', 4, ' UNIX SYSTEM PROGRAMMING (4-0-0-4) \r\nOBJECTIVE The objective of the course is to teach students advanced programming techniques using UNIX system calls and the ANSI C and C++ programming languages. It also helps student be familiarized with the UNIX kernel structure and system calls. These allow users to write sophisticated applications to manipulate system resources such as files, processes and system information.  \r\n UNIT I 12 Hours Unix  System Overview: Introduction, UNIX Architecture, File I/O: Introduction, File Descriptors, open Function, creat Function, close Function, lseek Function, read Function, write Function, I/O Efficiency, File Sharing, Atomic Operations, dup and dup2 Functions, sync, fsync, fdatasync Functions, fcntl Function, ioctl Function, Files & Directories: Introduction, stat, fstat, & lstat Functions, File Types, Set–User–ID and Set–Group–ID, File Access Permissions, Ownership of New Files and Directories, access Function, umask, chmod, fchmod Functions, chown, fchown, & lchown Functions, File Size, File Truncation, File Systems, link, unlink, remove, & rename Functions, Symbolic Links, symlink & readlink Functions, File Times, utime Function, mkdir, & rmdir Functions, Reading Directories, chdir, fchdir getcwd Functions, Device Special Files.  \r\n UNIT II 12 Hours Process Environment: Introduction, main Function, Process Termination, Command–Line– Arguments, Environment List, Memory Layout of a C Program, Shared Libraries, Memory Allocation, Environment Variables, setjmp and longjmp Functions, getrlimit and setrlimit Functions, Process Control: Introduction, Process Identifiers, fork, vfork, exit Functions, wait, waitpid, waited, wait3, and wait4 Functions, Race Conditions, exec Functions, Changing User IDs and Group IDs, system Function, Process Accounting, User Identification, Process Times, Process Relationships: Introduction, Terminal Logins, Network Logins, Process Groups, Sessions, Controlling Terminal, tcgetpgrp,  tcsetpgrp and tcgetsid Functions, Job Control, Shell Execution of Programs, Orphaned Process Groups.  \r\n UNIT   III 10 Hours Signals: Introduction, Signal Concepts, signal Functions, Unreliable Signals, Interrupted System Call, Reentrant Functions, SIGCLD Semantics, kill, raise Functions, alarm, and pause Functions, Signal Sets, sigprocmask Function, sigpending, sigaction Functions, sigsetjmp, siglongjmp Functions, sigsuspend, abort Functions, system, sleep Functions, Job–Control–Signals.  \r\n UNIT IV 10 Hours Interprocess Communication: Introduction, Pipes, popen, & pclose Functions, Coprocesses, FIFOs, XSI IPC, Message Queues, Semaphores, Shared Memory, Client – Server Properties.  \r\n                                                                              UNIT V 08 Hours Threads: Introduction, Thread Concepts, Thread Identification, Thread Creation, Thread Termination, Thread Synchronization, Mutexes, Deadlock Avoidance, Condition Variables.    \r\nText book T1. Advanced programming in the UNIX environment, 2nd edition, W. Richard Stevens, Stephen. A. Rago, Addison-Wesley professional computing series. \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 22     \r\nUNIT#              Sections  \r\nUNIT – I        Ch 1.1 – Ch 1.2, Ch 3.1 – Ch 3.15, Ch 4.1 – Ch 4.23 UNIT – II       Ch 7.1 – Ch 7.11, Ch 8.1 – Ch 8.16, Ch 9.1 – Ch 9.10 UNIT – III      Ch 10.1 – Ch 10.7, Ch 10.9 – Ch 10.20 UNIT – IV      Ch 15.1 – Ch 15.10 UNIT – V       Ch 11.1 – Ch 11.6 ', 'CSE', 6, 'www.google.com');
INSERT INTO `course` (`course_name`, `course_id`, `credit`, `course_info`, `dep_id`, `sem`, `url`) VALUES
('Unix System Programmimg Laboratory', '6CS_USPL', 1, ' UNIX SYSTEM PROGRAMMING LABORATORY (0-0-2-1)   \r\nProgram #1 Program to illustrate a file of records to - display all the records - display the ith record  \r\nProgram #2 Program to illustrate ls –l  \r\nProgram #3 Program to illustrate shared libraries - create a static library - create a dynamic library  \r\nProgram #4 Program to illustrate setjmp & longjmp  \r\nProgram #5 Program to illustrate fork & exec and execute a given command  \r\nProgram #6 Program to illustrate fork: - sharing of data segment, stack, heap - Environmental variable (getenv & setenv) - exit status (wait)  \r\nProgram #7 Program to illustrate daemon & racing  \r\nProgram #8 Program to illustrate signal handler - signal  - sigaction - handle timer signal   \r\nProgram #9 Program to illustrate critical section - block - unblock To check (i) what happens on forking and (ii) what happens on exec  \r\nProgram #10 Program to illustrate message queues \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 29    \r\nProgram #11 Program to illustrate shared memory  \r\nProgram #12 Program to illustrate semaphores - POSIX semaphore - SYSTEM V semaphore', 'CSE', 6, 'www.google.com'),
('Web Technologies', '6CS_WT', 4, ' WEB TECHNOLOGIES (4-0-0-4)  \r\nOBJECTIVE: This course gives an overview of the Web technologies, kind of "Jump Start" into the Web development. The purpose of this course is to give the basic understanding of how the things are working in the Web world from the technology point of view as well as to give the basic overview of the different technologies. The idea of this is not that you will learn how to use all of these technologies, but to help you understand the basics and find out where to start. The tutorial includes (although in some cases briefly) the following topics: History of the Web, What is URL, HTML, JavaScript, Cascading Style Sheets (CSS), DHTML, Server-Side, Security, plus gives you some references where to look further.   \r\nUNIT I 10 Hours  \r\nIntroduction: History of internet and World Wide Web, World Wide Web consortium, Web 2.0, personal, distributed and client server computing, Hardware trends, Object Technology, JavaScript: Object-based scripting for the web. Browser portability  \r\nWeb Servers: Introduction, HTTP transactions, Multi-tier Application architecture, client side versus server scripting, accessing web servers  \r\nHTML  and XHTML : Introduction, editing XHTML, w3c XHTML validation service, headers, linking, images, special characters, unsorted lists, nested and ordered lists, XHTML tables, XHTML forms, internal linking, meta elements.  \r\n UNIT II 11 Hours  \r\nStyle Sheets: Inline styles, embedded style sheets, conflicting styles, linking external style sheets,  positioning elements, backgrounds, element dimensions, Box Model and text flow, Media Types, Building a CSS drop-down menu, User style sheets.  \r\nJava Script: Introduction, Simple program, obtaining user input with prompt dialogs, memory concepts, arithmetic, decision making, assignment operators, control structures – IF, IF…ELSE, WHILE, , FOR repetition statement, SWITCH multiple-selection statement, DO…WHILE repetition statement, logical operators.  \r\n UNIT III 12 Hours  \r\nJava Script: Program modules in JavaScript, function definitions, scope rules, global functions, recursion, arrays,  references and reference parameters, passing arrays to functions, sorting arrays, searching arrays, multi-dimensional arrays, math object, string object, date object, Boolean and number object, document object, window object, using cookies, using JSON to represent objects.  \r\n UNIT IV 10 Hours  \r\nDocument Object Model: Introduction, Modeling a document, DOM Nodes and Trees, Traversing and modifying a DOM tree, DOM Collections, dynamic styles, summary of DOM objects and Collections, registering event handlers, onload, onmousemove, the event object, this, onmouseover, onmouseout, onfocus, onblur, onsubmit, onreset, event bubbling, more events.  UNIT V 9 Hours  \r\nAJAX: Introduction, traditional web applications versus AJAX applications, rich internet applications with AJAX, Raw AJAX example using XML Http Request, Using XML and DOM. \r\nPESIT Student Handbook 2013-14 Computer Science V & VI………………………………………… 24   \r\nPHP: Introduction, PHP basics, string processing and regular expressions, form processing and business logic, connecting to database, using cookies, dynamic content, operator precedence.  \r\nText Books:  \r\nInternet and World Wide Web: How to Program, Deitel and Deitel, 4th Edition, Prentice Hall, 2009.  \r\nUNIT #       SECTIONS Unit I  :     1: 10-17, 21: 826-833, 4:117-147 Unit II  :     5: 156-186, 6: 193-219, 7: 226-257, 8:266-299 Unit III :     9: 305-334, 10: 343-374, 11:382-424 Unit IV :    12: 432-456, 13: 461-484 Unit V  :    15: 560-576, 23: 872-917 ', 'CSE', 6, 'www.google.com'),
('Web Technologies laboratory', '6CS_WTL', 1, ' WEB TECHNOLOGIES LABORATORY (0-0-2-1)    \r\nProgram #1 Program to demonstrate XHTML tags  \r\nProgram #2 Program to demonstrate CSS Style sheets  \r\nProgram #3 Basic JavaScript program to demonstrate use of variables and control structures   \r\nProgram #4 JavaScript Program to demonstrate use of functions and dialog boxes  \r\nProgram #5 JavaScript Program to demonstrate use of String and date objects.  \r\nProgram #6 JavaScript Program to demonstrate DOM objects.  \r\nProgram #7 JavaScript Program to demonstrate dynamic styling and positioning  \r\nProgram #8 JavaScript Program to demonstrate forms and event handling  \r\nProgram #9 PHP program to demonstrate asynchronous server access using AJAX and JSON  \r\nProgram #10 Program to demonstrate basic PHP constructs and pattern matching  \r\nProgram #11 PHP program to demonstrate database access and cookies  \r\nProgram #12 PHP program to demonstrate sessions and file operations ', 'CSE', 6, 'www.google.com'),
('ALTERNATIVE BUILDING MATERIALS AND TECHNOLOGIES THEORY', '6CV_ABMT', 4, 'ALTERNATIVE BUILDING MATERIALS AND TECHNOLOGIES THEORY\r\n\r\nLESSON PLAN\r\n\r\nSubject Code: 12CV355A            Faculty: Dr Sujatha Unnikrishnan            No. of Hours: 52\r\n\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter (%)	Cumulative\r\n(%) \r\n1-6	Unit 1	 Introduction :Environmental issues concerned to building materials Environmental friendly and cost effective building technologies. Requirements for building of different climatic regions.                                                                                                                      	10	10\r\n7-10		.Alternative building materials: Characteristics of building blocks for walls , Stones and Laterite blocks Fal-G Blocks                                                                      \r\n	10	20\r\n11-15	Unit 2	ALTERNATIVE BUILDING TECHNOLOGIES Alternative for wall construction Types , Construction method, Masonry mortars(type ,preparation and properties	8	28\r\n15-20		Alternative roofing systems(concepts),filler slab, composite beam panel roofs, masonry vaults and domes     \r\n	5	33\r\n20-25\r\n\r\n	Unit -3	STRUCTURAL MASONRY :Compressive strength of masonry elements, Factors affecting compressive strength, Strength of units, prisms / wallettes and walls, Effect of brick work bond on strength	10	43\r\n26-33		Bond strength of masonry : Flexure and shear, Elastic properties of masonry materials and masonry IS Code provisions, Design of masonry compression elements, Concepts in lateral load resistance	15	58\r\n34-38	Unit -4	COST EFFECTIVE BUILDING DESIGN :Cost concepts in buildings, Cost saving techniques in planning,	12	70\r\n 39-43		design and construction, Cost Analysis : Case studies using alternatives	10	80\r\n44-48	Unit -5	EQUIPMENTFOR PRODUCTION OFALTERNATIVEMATERIALS: Machines for manufacture of concrete , Equipments for production of stabilized blocks	10	90\r\n49-52		Moulds and methods of production of precast elements.                                                                                         \r\n\r\n	10	100\r\nTEXTBOOKS:\r\n1. Alternative Building Materials and Technologies \r\n K.S. Jagadish and B.V. Venkatarama Reddy,1ST Edition “New age international(p) ltd”\r\n2. Structural Masonry by Arnold W. Hendry 2ndEdition” Palgrave Macmillan”\r\n\r\n\r\nReference Books:\r\n1. Relevant IS Codes.\r\n2. Alternative building materials and technologies.\r\n', 'CV', 6, 'www.google.com'),
('CONCRETE AND HIGHWAY MATERIALS LABORATORY LAB', '6CV_CHML', 2, 'CONCRETE AND HIGHWAY MATERIALS LABORATORY           \r\nLAB\r\nExperiments	Portions to be Covered	Class	%PORTION COVERED\r\n			(%)of topics covered	Cumulative (%)\r\n	Introduction	1	7%	7%\r\nCycle 1\r\n1&2	Normal Consistency, Setting time, Specific gravity of cement.	2	8%	15%\r\n3&4	Soundness by Autoclave method, Compression strength test and Air permeability test for fineness,	3	7%	22%\r\n5	Slump, Compaction factor	4	7%	29%\r\n6&15	Vee-Bee test, proportioning of aggregate mixes by Rothfutch Method, Marshall Stability\r\ntests.	5	8%	37%\r\n7	Workability test for SCC.	6	7%	44%\r\n8	Compression strength and Split tensile test	7	8%	52%\r\nCycle 2\r\n9	Test on flexural strength of RCC beams, Permeability of concrete.	8	8%	60%\r\n10&11	Crushing, abrasion, impact and Shape tests (Flaky,Elongation, Angularity number)	9	7%	67%\r\n12	Specific gravity and water absorption	10	7%	74%\r\n13	Specific Gravity, Penetration, Ductility of bitumen	11	8%	82%\r\n14	Softening point, Flash and fire point, Viscosity,	12	8%	90%\r\n16	PUNDIT, Rebound hammer test	13	10%	100%\r\n', 'CV', 6, 'www.google.com'),
('DESIGN AND DETAILING OF HYDRAULIC STRUCTURES', '6CV_DDHS', 2, 'DESIGN AND DETAILING OF HYDRAULIC STRUCTURES\r\nPRACTICE\r\nLESSON PLAN\r\nSubject Code: 12CV356	  Faculty: Prof SEEMA S		       No. of Hours: 26\r\nClass	Portions to be Covered	% of Portions covered\r\n		Referred Chapter	Cumulative\r\n1-10	Design & drawing of impounding structures:\r\na) Gravity dam,\r\nb)Tank Surplus Weir\r\nc) Tank Sluice with tower road	38%	38%\r\n11 - 18	Design & drawing of canal transmission structures:\r\na) Super passage\r\nb) Canal Drops	31%	69%\r\n19 - 26	Design & drawing of Canal regulation structures:\r\na) Canal head works\r\nb) Canal Regulatory works\r\n	31%	100%\r\n\r\nTEXT BOOKS:\r\n1 Irrigation engineering & Hydraulic structures- Garg. S.K.,khanna publishers, New Delhi\r\n2 Design of minor irrigation and Canal structures- C. SathyaNarayana Murthy, Wiley eastern limited, New Delhi (1990)\r\n3. Hydraulic Structures & Irrigation Design Drawing -Dr.N.Balasubramanya, Tata Mcgraw-Hill Education Pvt.Ltd.,New Delhi\r\n4. Irrigation, Water Resources & Water power engineering- Modi. P.N., Standard Book House, New Delhi\r\n\r\n', 'CV', 6, 'www.google.com'),
('DESIGN AND DETAILING OF STEEL STRUCTURES  ', '6CV_DDSSL', 2, 'DESIGN AND DETAILING OF STEEL STRUCTURES  \r\nExpt. #	Class	Portions to be Covered	Percentage\r\nCovered	Cumulative\r\n1	1-2	Design and Detailing of Bolted Connections: Beam-Column, Beam – Beam.	7.7	7.7\r\n2	3 - 4	Design and Detailing of welded Structural Connections: Beam-Column, Beam – Beam.	7.7	15.4\r\n3	5 - 6	Design and Detailing of Bolted and welded Structural Connections Splices: Beam, Column, Bracket connections.	7.7	23.1\r\n4	7 – 8	Detailing of Laced and Batten compression members.	7.7	30.8\r\n5	9 - 10	Detailing of Slab base.	7.7	38.5\r\n6	11 - 12	 Detailing of Gusset base.	7.7	46.2\r\n7	13 - 14	Design and Detailing of Truss members and Joints.	7.7	53.9\r\n8	15 - 16	Design and Detailing of Truss members and Joints.	7.7	61.6\r\n9	17 – 18	Design and Detailing of Welded Plate girders with stiffeners.	7.7	69.3\r\n10	19 – 20	Design and Detailing of Welded Plate girders with stiffeners.	7.7	77\r\n11	21 – 22	Design and Detailing of Welded Plate girders without stiffeners.	7.7	84.7\r\n12	23 – 24	Design and Detailing of Gantry Girder	7.7	92.4\r\n13	25- 26	Design and Detailing of Gantry Girder	7.7	100\r\n\r\nText books \r\n1.	“Design of steel structures”, N Subramanian, Oxford, 2008.\r\n2.	“Limit state design of steel structures”, Duggal, Tata Mcgraw hill 2010.\r\n3.	Bureau of Indian standards, IS 800-2007.\r\n4.	Bureau of Indian standards, IS 875-1987.\r\n5.	Bureau of Indian standards, SP: 6(1) – 1964.\r\n\r\nReference books\r\n1.	“Design of steel structures”, S. Ramamrutham, Dhanpat Rai Publishing Company (p) Limited, 1975. \r\n2.	“Design of Steel Structures”, Pasala Dayaratnam, reprint, S. Chand, 1999.\r\n3.	“Design of Steel Structures”, Dr. B.C. Punmia, Ashok Kumar Jain, Arun Kr. Jain, Punmia, Firewall Media, 1998.  \r\n4.	“Design of Steel Structures 1”, Ramchandra, Scientific Publishers, 2007.\r\n', 'CV', 6, 'www.google.com'),
('DESIGN OF STEEL STRUCTURES THEORY', '6CV_DSS', 4, 'DESIGN OF STEEL STRUCTURES	\r\n\r\nTHEORY\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 - 4	UNIT 1\r\n	Structural Members and Connections: Structural members – Main, Secondary, Connections, Steel Sections- Rolled, Hollow, and Cold formed, Welded Sections, Castellated Beams and Built-up sections. Selection of Sections, Primary Steel Properties, Modes of failure in Members - Yielding, Fracture, Local and Member Buckling.	8%	8%\r\n5 - 9		Bolts and Bolting:  Types, Sizes and Grades, Bolt Holes, Bolted Shear Failure Mechanisms – Bolt shear, Shear tear out, Bearing Failure, Net Section Failure, Block Shear, Load transfer in Bearing and Slip critical connections. Welds and Welding : Welding Process, Types, Weld Size, End returns	6%	14%\r\n10 - 12		Strength Limit State and Serviceability limit state, partial safety factors for Loads and Materials as per IS 800, Design Action and Design Strength.  Design of Plate connections - Lap, But - Examples	6%	20%\r\n13 - 17	UNIT 2\r\n	Structural Systems with tension members, Sections adopted, Failure Modes, Code recommendations for Design Strength and Stiffness requirements	10%	30%\r\n18 – 22		Design Examples- Single and Double Angles, Equal ,unequal, Bolted and welded, Lug Angles	10%	40%\r\n23- 26	UNIT 3	Structural Systems with compression members, Modes of failure, Behavior of compression members, Elastic buckling of slender compression members, Sections used for compression members, Effective length of compression members.	8%	48%\r\n27 - 32		Design of compression members – Rolled, Angle and Built up compression members: Laced and Battened columns.	12%	60%\r\n33 - 38	UNIT 4	Behaviour of Beams under increasing moment, Fully Plastic Moment, Plastic Section modulus, Plastic Hinge, Shape Factor, Plastic Analysis- Collapse load – Beam Examples. Failure Modes, Section Classification: Plastic, Compact, Semi-Compact and Slender.	10%	70%\r\n39 – 44		Design Bending Strength of laterally supported and Unsupported beams, Shear Yielding, Web buckling, Web Crippling – Design Examples with low shear and high shear	10%	80%\r\n45 - 48	UNIT 5	Types of column bases - Slab base, Gusset base.	12%	92%\r\n49- 52		Design of moment resisting base plate, foundation bolts	8%	100%\r\nText books\r\n1.	“Design of steel structures”, N Subramanian, Oxford University press, 2008.\r\n2.	“Limit state design of steel structures”, S K Duggal, Mcgraw Hill Education (India) private lilited 2010.\r\n3.	Bureau of Indian standards, IS 800-2007.\r\n4.	Bureau of Indian standards, SP: 6(1) – 1964.\r\nReference books\r\n1.	“Design of steel structures”, S. Ramamrutham, Dhanpat Rai Publishing Company (p) Limited, 1975. \r\n2.	“Design of Steel Structures”, Pasala Dayaratnam, reprint, S. Chand, 1999.\r\n3.	“Design of Steel Structures”, Dr. B.C. Punmia, Ashok Kumar Jain, Arun Kr. Jain, Punmia, Firewall Media, 1998.  \r\n4.	“Design of Steel Structures 1”, Ramchandra, Scientific Publishers, 2007.\r\n\r\n', 'CV', 6, 'www.google.com'),
('ELEMENTS OF ENVIRONMENTAL SCIENCE AND ENGINEERING', '6CV_EESE', 4, 'ELEMENTS OF ENVIRONMENTAL SCIENCE AND ENGINEERING\r\n\r\nSubject Code: 12CV353	  Faculty:  Dr. B. A. Kanchan Garg           No. of Hours: 52\r\nClass	UNIT	Portions to be Covered	% Portions Covered	% Portions Covered\r\n			For the unit	For the unit\r\n1-10	I	ECOLOGY:\r\nIntroduction and Scope of Ecology\r\nEcosystems – definition, types and characteristics - forest, aquatic (fresh water, marine, estuarine). Natural Resources (Forest, Mineral, Water, Energy and Food); Human Activities and its effect on ecosystem.\r\nPollution - Sources, effects and control : Soil and agricultural pollution; water pollution, air pollution; noise pollution; thermal pollution; waste – domestic / hazardous \r\nCommunity Health and Occupational Safety -\r\nCommunity health; Hazards prevalent in various types of occupation; occupational health plan and prevention & control.	19	19\r\n\r\n\r\nSubject Code: 12CV353	  Faculty:  Dr. B. A. Kanchan Garg           No. of Hours: 52\r\nClass	UNIT	Portions to be Covered	% Portions Covered	% Portions Covered\r\n			For the unit	For the unit\r\n1-10	I	ECOLOGY:\r\nIntroduction and Scope of Ecology\r\nEcosystems – definition, types and characteristics - forest, aquatic (fresh water, marine, estuarine). Natural Resources (Forest, Mineral, Water, Energy and Food); Human Activities and its effect on ecosystem.\r\nPollution - Sources, effects and control : Soil and agricultural pollution; water pollution, air pollution; noise pollution; thermal pollution; waste – domestic / hazardous \r\nCommunity Health and Occupational Safety -\r\nCommunity health; Hazards prevalent in various types of occupation; occupational health plan and prevention & control.	19	19\r\n11-20	II	DRINKING WATER:\r\nWater Quality - Sources of water; yield of well; impurities; water quality at a source; drinking water quality standards; water quality for other purposes.\r\nWater Supply - Per capita demand; water collection from a source; pipes and appurtenances; service reservoir.\r\nWater Purification - Necessity of purification; design parameters; coagulation, filtration, disinfection and other methods; rural water supply	19	38\r\n21 – 30	III	INDUSTRIAL WASTE WATER\r\nIndustrial Waste Water - Waste characteristics; mixing of domestic and industrial waste; pre-treatment of industrial wastes – reduction of waste strength and volume, equalisation and neutralisation; various industries – dairy plant, cane sugar and distilleries, fertilizer industry, refineries and petrochemicals, pharmaceuticals, tanneries, textile plants\r\nPrimary Treatment (physico-chemical) – objectives, schematic outline, screens, grit chamber, primary sedimentation tank, skimming tank, other units\r\nSecondary Treatment (Biological) – general, trickling filters, activated sludge process, oxidation ponds, oxidation ditch, Rotating Biological Disc Contractors (RBC), secondary sedimentation tank.\r\nSludge Treatment and Disposal – sludge characteristics, digestion of sludge, sludge drying beds, septic tank.\r\nTertiary Treatment - filtration, adsorption, gas stripping, ion exchange, advanced oxidation processes, distillation; disinfection.\r\nConcepts Common Effluent Treatment Plants (CETP).	19	57\r\n21 – 30	III	INDUSTRIAL WASTE WATER\r\nIndustrial Waste Water - Waste characteristics; mixing of domestic and industrial waste; pre-treatment of industrial wastes – reduction of waste strength and volume, equalisation and neutralisation; various industries – dairy plant, cane sugar and distilleries, fertilizer industry, refineries and petrochemicals, pharmaceuticals, tanneries, textile plants\r\nPrimary Treatment (physico-chemical) – objectives, schematic outline, screens, grit chamber, primary sedimentation tank, skimming tank, other units\r\nSecondary Treatment (Biological) – general, trickling filters, activated sludge process, oxidation ponds, oxidation ditch, Rotating Biological Disc Contractors (RBC), secondary sedimentation tank.\r\nSludge Treatment and Disposal – sludge characteristics, digestion of sludge, sludge drying beds, septic tank.\r\nTertiary Treatment - filtration, adsorption, gas stripping, ion exchange, advanced oxidation processes, distillation; disinfection.\r\nConcepts Common Effluent Treatment Plants (CETP).	19	57\r\n31-42	IV	ENVIRONMENTAL SANITATION\r\nSignificance of Environmental Sanitation - Significance; Disease transmission, principles of sanitation; vector control; housing needs; community sanitation measures; health education. \r\nRefuse Disposal - Constituents of refuse; problems of disposal; refuse collection; parameters of analysis and landfill; plastics.\r\nDomestic and Industrial Solid Waste - Types of waste; Characterization and composition; considerations in solid waste management, collection system, separation and processing; conversion of waste; landfill - design criteria, problems, leachate management and gas production.\r\nSewerage System\r\nMethods of sanitation; quantities of sewage and storm water flow; sewer – design, construction and appurtenances; house drainage.\r\nSewage Characteristics – sewage composition; decomposition of sewage, Biochemical Oxygen Demand (BOD), Chemical Oxygen Demand (COD), solids, population equivalent.\r\nSewage Disposal \r\nDisposal into a river, factors of self purification, oxygen sag curve, zones of pollution, disposal on land, land vs river disposal, removal of solids	24	81\r\n31-42	IV	ENVIRONMENTAL SANITATION\r\nSignificance of Environmental Sanitation - Significance; Disease transmission, principles of sanitation; vector control; housing needs; community sanitation measures; health education. \r\nRefuse Disposal - Constituents of refuse; problems of disposal; refuse collection; parameters of analysis and landfill; plastics.\r\nDomestic and Industrial Solid Waste - Types of waste; Characterization and composition; considerations in solid waste management, collection system, separation and processing; conversion of waste; landfill - design criteria, problems, leachate management and gas production.\r\nSewerage System\r\nMethods of sanitation; quantities of sewage and storm water flow; sewer – design, construction and appurtenances; house drainage.\r\nSewage Characteristics – sewage composition; decomposition of sewage, Biochemical Oxygen Demand (BOD), Chemical Oxygen Demand (COD), solids, population equivalent.\r\nSewage Disposal \r\nDisposal into a river, factors of self purification, oxygen sag curve, zones of pollution, disposal on land, land vs river disposal, removal of solids	24	81\r\n31-42	IV	ENVIRONMENTAL SANITATION\r\nSignificance of Environmental Sanitation - Significance; Disease transmission, principles of sanitation; vector control; housing needs; community sanitation measures; health education. \r\nRefuse Disposal - Constituents of refuse; problems of disposal; refuse collection; parameters of analysis and landfill; plastics.\r\nDomestic and Industrial Solid Waste - Types of waste; Characterization and composition; considerations in solid waste management, collection system, separation and processing; conversion of waste; landfill - design criteria, problems, leachate management and gas production.\r\nSewerage System\r\nMethods of sanitation; quantities of sewage and storm water flow; sewer – design, construction and appurtenances; house drainage.\r\nSewage Characteristics – sewage composition; decomposition of sewage, Biochemical Oxygen Demand (BOD), Chemical Oxygen Demand (COD), solids, population equivalent.\r\nSewage Disposal \r\nDisposal into a river, factors of self purification, oxygen sag curve, zones of pollution, disposal on land, land vs river disposal, removal of solids	24	81\r\n31-42	IV	ENVIRONMENTAL SANITATION\r\nSignificance of Environmental Sanitation - Significance; Disease transmission, principles of sanitation; vector control; housing needs; community sanitation measures; health education. \r\nRefuse Disposal - Constituents of refuse; problems of disposal; refuse collection; parameters of analysis and landfill; plastics.\r\nDomestic and Industrial Solid Waste - Types of waste; Characterization and composition; considerations in solid waste management, collection system, separation and processing; conversion of waste; landfill - design criteria, problems, leachate management and gas production.\r\nSewerage System\r\nMethods of sanitation; quantities of sewage and storm water flow; sewer – design, construction and appurtenances; house drainage.\r\nSewage Characteristics – sewage composition; decomposition of sewage, Biochemical Oxygen Demand (BOD), Chemical Oxygen Demand (COD), solids, population equivalent.\r\nSewage Disposal \r\nDisposal into a river, factors of self purification, oxygen sag curve, zones of pollution, disposal on land, land vs river disposal, removal of solids	24	81\r\n', 'CV', 6, 'www.google.com'),
('HYDROLOGY AND IRRIGATION ENGINEERING  THEORY', '6CV_HIE', 4, 'HYDROLOGY AND IRRIGATION ENGINEERING\r\n\r\nTHEORY\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 – 8	UNIT 1\r\n\r\n	INTRODUCTION & PRECIPITATION\r\nIntroduction, Hydrologic cycle (Horton’s representation). Water budget equation \r\nPrecipitation: Introduction, forms of precipitation, measurement of precipitation, Rainguage network, methods of computing average rainfall, interpolation of missing data, adjustment of missing data by double mass curve method. Depth duration area relationships, Hyetograph and mass curve of rainfall.                                 	13%	13%\r\n9-11		LOSSES FROM PRECIPITATION\r\nEvaporation: Definition, factors affecting, measurement, Estimation using empirical methods evaporation control. Evapo-transpiration: Definition, factors affecting, measurement, estimation.				9%	21%\r\n12 - 22	UNIT 2	HYDROGRAPHS Run-off- Process, Catchment characteristics – Factors affecting runoff , estimation, flow-duration curves, Definition of hydrographs, components of hydrographs, unit hydrograph, S-Curve hydrograph, Synthetic Hydrograph, base flow separation, Instantaneous unit hydrograph- problems	20%	41%\r\n23 - 33	UNIT 3	ESTIMATION OF FLOOD & FLOOD ROUTING\r\nDefinition of flood, factors affecting flood, methods of estimation (envelope curves, empirical formulae, rational method). Flood routing: Introduction to hydrological routing, relationship of out flow and storage, general storage equation, Muskingum routing method, Problems		20%	61%\r\n33 - 43	UNIT 4	IRRIGATION: Introduction, need for irrigation, advantages and disadvantages of irrigation, Types of irrigation, Techniques of water distribution in farms, Quality of Irrigation water, soil-water-plant relationship, soil moisture. Frequency of irrigation Water requirement of Crops: Introduction, definitions, crop seasons of India, duty, delta, base period, Irrigation efficiencies, Problems Consumptive use, Estimation of consumptive use, Problems.	20%	81%\r\n43 - 52	UNIT 5	RIVER CONTROL AND TRAINING WORKS Importance of rivers and necessity of control, Types of rivers and their characteristics, Classification of rivers, Behaviour of rivers, Control and training of rivers: Objective, Classification, Methods.	19%	100%\r\n\r\nTEXT BOOKS:\r\n1. Subramanya K, “Engineering Hydrology”, 3rd edition,Tata McGraw Hill, New Delhi.\r\n2. Irrigation Engineering and Hydraulics Structures: S. K. Garg, Khanna Publishers.\r\n', 'CV', 6, 'www.google.com'),
('LIMIT STATE DESIGN OF RC STRUCTURAL SYSTEMS', '6CV_LSD', 4, 'LIMIT STATE DESIGN OF RC STRUCTURAL SYSTEMS\r\nLesson Plan\r\n\r\nSubject Code: 12CV351	Faculty:  Dr. Sujatha Unnikrishnan	           	  No. of Hours: 52\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 – 10	UNIT 1\r\n\r\n	Design of Stair Cases: Introduction, General Notes on Design of Stairs, Design of Stairs Spanning Horizontally, Design of Dog-legged Stair, Design of Stair with Quarter Space Landing, Design of Open Newel Stair with Quarter Space Landing, Design of Staircase with Central Stringer Beam, Tread & Riser staircase, Numerical Problems, Rebar details, Bar bending schedule	19%	19%\r\n11 - 18	UNIT 2\r\n	Design of Flat Slabs: Introduction, Components of flat slab construction, Indian code recommendations (IS:456-2000), Direct design method, Equivalent frame method, shear in flat slab, slab reinforcement, openings in flat slab, Numerical Problems, Rebar details, Bar bending schedule	15%	34%\r\n\r\nLesson Plan\r\n\r\nSubject Code: 12CV351	Faculty:  Dr. Sujatha Unnikrishnan	           	  No. of Hours: 52\r\nClass	Chapter Title/\r\nReference Literature	Portions to be Covered	% Portions Covered\r\n			Referred Chapter	Cumulative\r\n1 – 10	UNIT 1\r\n\r\n	Design of Stair Cases: Introduction, General Notes on Design of Stairs, Design of Stairs Spanning Horizontally, Design of Dog-legged Stair, Design of Stair with Quarter Space Landing, Design of Open Newel Stair with Quarter Space Landing, Design of Staircase with Central Stringer Beam, Tread & Riser staircase, Numerical Problems, Rebar details, Bar bending schedule	19%	19%\r\n11 - 18	UNIT 2\r\n	Design of Flat Slabs: Introduction, Components of flat slab construction, Indian code recommendations (IS:456-2000), Direct design method, Equivalent frame method, shear in flat slab, slab reinforcement, openings in flat slab, Numerical Problems, Rebar details, Bar bending schedule	15%	34%\r\n19-23	UNIT 3\r\n	Combined Footings: Combined rectangular footing, Strap footing, Raft footing, Numerical Problems, Rebar details, Bar bending schedule	10%	44%\r\n24-30		Analysis and design of one way slab supported on portal frames- fixed and hinged- Numerical Problems, Rebar details, bar bending schedule	14%	58%\r\n31-42	UNIT 4\r\n	Design of Retaining Walls: Introduction, types of retaining walls, active earth pressure – Rankine’s theory, passive earth pressure, stability of cantilever retaining wall, design principles of cantilever retaining wall, design of cantilever retaining wall with horizontal backfill, design of cantilever retaining wall with sloping backfill, Design of counter fort retaining wall, Numerical Problems, Rebar details, Bar bending schedule	23%	81%\r\n43-52	UNIT 5\r\n	Design and Detailing of liquid retaining structures: Ground level reservoir – Rectangular, circular without roof (IS 3370 I-IV), Numerical Problems, Rebar details, Bar bending schedule	19%	100%\r\n43-52	UNIT 5\r\n	Design and Detailing of liquid retaining structures: Ground level reservoir – Rectangular, circular without roof (IS 3370 I-IV), Numerical Problems, Rebar details, Bar bending schedule	19%	100%\r\n\r\nText Books:\r\n1.	Dr. B C Punmia, Ashok Kumar Jain, Arun Kumar Jain., “Limit State Design of Reinforced Concrete”, Laxmi Publications (P) Ltd., \r\n\r\n\r\nReference Books\r\n1.	S Ramamrutham, Design of Reinforced Concrete Structures (RCC), Dhanpat Rai & Sons\r\n2.	Unnikrishnan Pillai and Devdas Menon, Reinforced Concrete Design, 3rd Edn,  Tata McGraw Hill\r\n3.	N Subramanian, Design of Reinforced Concrete Structures, Oxford, IBH\r\n4.	IS 456 – 2000.\r\n5.	IS 3370 I-IV.\r\n6.	SP – 24-1983.\r\n7.	SP –16-1984.\r\n', 'CV', 6, 'www.google.com'),
('THEORY OF ELASTICITY', '6CV_TE', 4, 'THEORY OF ELASTICITY (4-0-0-0-4)\r\nLesson Plan\r\nSubject Code: 12CV355C            Faculty: Prof Nayana H                              No. of Hours: 52\r\nClass #	Topics to be Covered	% of topics covered\r\n1 - 6	Introduction: elasticity, stress, notation for forces and stresses, components of stress, components of strain, Hooke’s law, problems. 	23\r\n\r\n6-12	Plane Stress and Plane Strain: Plane stress, plane strain, stress at a point, strain at a point, measurement of surface strains, strain rosettes problems	\r\n12 - 18	Plane Stress and Plane Strain: Differential equations of equilibrium, boundary conditions, compatibility equations, stress function, problems.	46\r\n18-24	Two-dimensional problems in rectangular coordinates: Solution by polynomials, End effects -St. Venant’s principle, determination of displacements, bending of a cantilever loaded at the end, bending of a beam by uniform load.	\r\n25 - 34	Two-dimensional problems in polar coordinates: General equations in polar coordinates, stress distributions symmetrical about an axis, pure bending of curved bars, strain components in polar coordinates, displacements for symmetrical stress distributions.	65\r\n\r\n3.	What are the equipments required for preparing concrete \r\n12CV 355C – THEORY OF ELASTICITY (4-0-0-0-4)\r\nLesson Plan\r\nSubject Code: 12CV355C            Faculty: Prof Nayana H                              No. of Hours: 52\r\nClass #	Topics to be Covered	% of topics covered\r\n1 - 6	Introduction: elasticity, stress, notation for forces and stresses, components of stress, components of strain, Hooke’s law, problems. 	23\r\n\r\n6-12	Plane Stress and Plane Strain: Plane stress, plane strain, stress at a point, strain at a point, measurement of surface strains, strain rosettes problems	\r\n12 - 18	Plane Stress and Plane Strain: Differential equations of equilibrium, boundary conditions, compatibility equations, stress function, problems.	46\r\n18-24	Two-dimensional problems in rectangular coordinates: Solution by polynomials, End effects -St. Venant’s principle, determination of displacements, bending of a cantilever loaded at the end, bending of a beam by uniform load.	\r\n25 - 34	Two-dimensional problems in polar coordinates: General equations in polar coordinates, stress distributions symmetrical about an axis, pure bending of curved bars, strain components in polar coordinates, displacements for symmetrical stress distributions.	65\r\n35 - 44	Two-dimensional problems in polar coordinates: Rotating disks, Effect of circular holes on stress distribution in plates, stresses in circular disk.	85\r\n35 – 52	Torsion: Torsion of prismatic bars: Inverse and Semi-inverse methods, stress function, torsion of circular and elliptical sections, torsion of hollow shafts	100\r\n\r\n', 'CV', 6, 'www.google.com'),
('Network Management', '7CS_EB01', 4, '  NETWORK MANAGEMENT (4-0-0-4) \r\nObjective: Networks are the „critical? part of the IT infrastructure of any organization. Hence it is essential to monitor and manage the networks efficiently. Typically networks are built using multiple heterogeneous equipment, software and protocol. It is really challenging to automate the network management. However over a period, technologies and standards have evolved. This subject emphasizes at providing principles of network management. \r\n                                                                           UNIT I      12 Hrs \r\nThe Network Management Challenge: Introduction,  The Internet And Network Management , Internet Structure ,Managing An Entity, Internal And External Policies, The State Of Network Management, Network, Role of IT in an Organization, IT process maturity model, Management stages In The Gartner Model, Benefits Of Automation, Impact on Business, Distributed Systems and New Abstractions, Functional Grouping of Network Management Activities, Need for Standardization, Network Management Architecture for Interoperability, Network Management Standards,   \r\n                                                                          UNIT II     8 Hrs  \r\nA Review Of Network Elements And Services: Introduction, Network Devices And Network Services, Network Elements And Element Management, Effect Of Physical Organization On Management, Examples Of Network Elements And Services, Basic Ethernet Switch,VLAN Switch ,Access Point For A Wireless LAN, Cable Modem System, DSL Modem System And DSLAM , CSU/DSU Used In Wide Area Digital Circuits, Channel Bank, IP Router, Firewall, DNS Server ,DHCP Server, Web Server, HTTP Load Balancer  \r\nThe Network Management Problem: What Is Network Management? , The Scope of Network Management, Variety And Multi-Vendor Environments, Element And Network Management Systems, Scale And Complexity, Types Of Networks, Classification Of Devices, FCAPS: The Industry Standard Definition, The Motivation for automation, Why Automation Has not Occurred, Organization Of Management Software                                                                                UNIT III     12 Hrs \r\nConfiguration And Operation :   Introduction ,Intuition For Configuration, Configuration And Protocol Layering, Topology And Layer 2,Logical Subnets And Layer 3,Access And Layer 4, Applications And Layer 5 (or Layer 7), Dependencies Among Configuration Parameters, Seeking A More Precise Definition Of Configuration, Configuration And Temporal Consequences ,Configuration And Global Consistency, Global State And Practical Systems, Configuration And Default Values ,Partial State, Automatic Update, And Recovery, Interface Paradigm And Incremental Configuration, Commit And Rollback During Configuration, Automated Rollback And Timeout, Snapshot, Configuration, And Partial State, Separation Of Setup And Activation, Configuring Multiple Network Elements \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 15    \r\nFault Detection and Correction: Introduction, Network Faults, Trouble Reports, Symptoms and Causes, Trouble Shooting and Diagnostics, Monitoring, Baselines, Items that can be monitored, Alarms, Logs and Polling, Identifying the cause of a fault, Human failure and network faults, Protocol layering and Faults, Hidden faults and Automatic correction, Anomaly detection and event correlation, Fault prevention \r\nAccounting and Billing: Introduction, Business Model and Network Charges, SLAs, Service Fees, Accounting for Flat rate & Use based services, Tiered levels of Service, Exceeding quotas and penalties, Assessing financial penalties, Traffic policing and strict enforcement of limits, technologies for limiting the rate of traffic, priorities and absolute guarantees, absolute bandwidth guarantees and MPLS, Relative bandwidth guarantees and priorities, Priorities and types of traffic, peering agreements and accounting \r\n                                                                             UNIT IV     8 Hrs \r\nPerformance Assessment and Optimization: Introduction, Aspects of performance, Items that can be measured, measures of network performance, Application and end point sensitivity, degraded service, variance of traffic and congestion, Congestion delays and utilization, Local and end-to-end measurements, passive observation and active probing, bottlenecks and future planning, capacity planning. \r\nSecurity: Introduction, The illusion of a secure network, security as a process, security terminologies and concepts, management goals related to security, risk assessment, security policies, acceptable use policies, management issues and security, Security architecture- perimeter vs resources, resource limits and DoS, management authentication, Access control and user authentication, security of network, RBAC, Audit trails and security logging , key management  \r\n                                                                            UNIT V     12 Hrs \r\nSimple Network Management Protocol (SNMP):  Introduction,  The Remote Management Paradigm And Applications, Management Functions And Protocol Definition, The Read-Write Paradigm, Arbitrary Operations And Virtual Items, Standards For Network Management Protocols, SNMP Scope And Paradigm, Basic SNMP Commands And Optimizations, Asynchronous Traps And Event Monitoring, Traps, Polling, Bandwidth, And CPU Cycles, Management Information Base (MIB) And Variables, A Hierarchy Of MIB Variable Names, Advantages And Disadvantages Of A Hierarchy ,Complex Data Aggregates And MIB Tables, Granularity Of Aggregate Access ,transport Protocols And Interaction, Updates, Messages, And Atomicity, The Remote Monitoring MIB (RMON),A Manager''s View Of MIB Variables ,Security And The Community String. Exposure to Network Management in Data centers - Cloud Environment \r\nText book: \r\nT1: Automated Network Management Systems, Douglas E Comer, Addison-Wesley   T2: Network Management by Mani Subramanian, Pearson Education, 2010 T3: Communications Network Management, Terplan, Kornel, Prentice-Hall, Englewood Cliffs,        N.J., 1991 T4: SNMP, SNMPv2 and CMIP, Addison-Wesley, Reading, Mass., Stallings, William, 1993', 'CSE', 7, 'www.google.com'),
('Digital Image Processing', '7CS_EB02', 4, ' DIGITAL IMAGE PROCESSING (4-0-0-4)  \r\nOBJECTIVE The aim of the course is to introduce analytical tools and methods which are currently used and applied to image information for human viewing. To make students understand the fundamental algorithms and how to implement them.  \r\n UNIT I 09 Hours  \r\nIntroduction: What is digital image processing?, The Origins of digital image processing, Example of Fields that use digital image processing, Gamma- Ray imaging, X-Ray imaging, Imaging in the Ultraviolet band, Imaging in the visible and infrared bands, Imaging in the Microwave band, Imaging in the Radio band, Examples in which other Imaging Modalities Are Used, Fundamental steps in digital image processing, Components of an image processing system  Digital Image Fundamentals: Elements of visual perception, Structure of the human eye, Image formation in the eye, Brightness adaptation and Discrimination, Light and the Electromagnetic spectrum, Image sensing and acquisition, Image acquisition using a single sensor, Image acquisition using sensor strips, Image acquisition using sensor Arrays, A simple image formation model, Image sampling and quantization, Basic concepts in sampling and quantization, Representing digital images, Spatial and Gray- Level resolution, Aliasing and Moire patterns, Zooming and shrinking digital images, Some basic relationships between pixels, Neighbors of a pixels, Adjacency, Connectivity, Regions, and boundaries, Distance measures, Image operations on a pixels basis, Linear and non linear operations.  \r\n UNIT II 09 Hours  \r\nImage Enhancement in the Spatial Domain: Background, Some basic Gray level transformation, Image negatives, Log  transformation, Power- Law- transformation, Piecewise-Linear transformation, functions, Histogram processing, Histogram equalization, Histogram Matching (Specification), Local Enhancement, Use of Histogram statistics for image Enhancement, Enhancement using Arithmetic/Logic  operations, Image subtraction, Image Averaging, Basics of spatial filtering, Smoothing spatial filters, Sharpening  spatial filters, Foundation, Use of second derivatives for Enhancement- The laplacian, Use of first  derivatives for Enhancement- The Gradient. Image Enhancement in the Frequency Domain: Background, Introduction to the Fourier transform and the Frequency Domain, The one Dimensional Fourier transform and its Inverse, the two -  Dimensional DFT and its Inverse, Filtering in the Frequency Domain, Correspondence between filtering in the spatial and Frequency Domain, Smoothing Frequency-Domain Filters, Ideal Lowpass Filters, Butterworth lowpass Filter, Gaussian lowpass filters, Additional Examples of lowpass filtering, Sharpening   Frequency Domain Filters, Ideal Highpass Filters, Butterworth Highpass Filter, Gaussian Highpass Filter, The laplacian in the Frequency Domain, Unsharp Masking, High- Boost Filtering, and High Frequency Emphasis Filtering , Homomorphic Filtering.  \r\n UNIT III 12 Hours  \r\nImage Restoration: A model of the image degradation/Restoration process, Noise models, Spatial and Frequency properties of Noise, Some important noise  probability density functions, Periodic noise, Estimation of noise parameters, Restoration in the presence of noise only – spatial filtering, mean filters, Order- Statistics filters, Adaptive filters, Periodic noise reduction by Frequency Domain \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 17    \r\nfiltering, Bandreject filters, Bandpass filters, Notch  filters, Optimum notch filtering, Linear, Positions – Invariant degradations, Estimating the degradation function, Estimation by image observation, Estimation by image Experimentation, Estimation by Modeling, Inverse filtering. Color Image Processing: Color Fundamental, color models, The RGB color model, the CMY and CMYK color models, The HIS color model, Pseudocolor Image processing, Intensity Slicing, Gray level to color transformations, Basics of full- color image processing.  \r\n UNIT IV 10 Hours  \r\nWavelets and Multiresolution Processing: Background, Image Pyramids, Subband coding, The hoar transform, Multiresolution Expansions, Series Expansions, Scaling functions, Wavelet functions. Image Compression: Fundamentals, Coding Redundancy, Interpixel Redundancy, Psychovisual Redundancy, Fidelity Criteria, Image Compression models, The Source Encoder and Decoder, The Channel Encoder and Decoder, Error-Free Compression, Variable-Lengh coding, LZW coding, Bitplane coding, Lossless predictive coding, lossy compression, Lossy predictive coding.  \r\n UNIT V 12 Hours  \r\nMorphological  Image Processing: Preliminaries, Some Basics Concepts from set theory, Logic operations involving binary images, Dilation and erosion,  Dilation, erosion, Opening and closing, The hit or – miss transformation, some basic Morphological Algorithms, Boundary Extraction, Region Filling,  Extraction connected components, Convex Hull, Thinning, Thickening, Skeletons, Pruning, Summary of  Morphological operations binary images. Image Segmentation: Detection of Discontinuities, Point Detection, Line Detection, Edge Detection, Edge Linking and Boundary Detection, Local Processing, Global Processing via the hough transform, Global Processing via Graph – Theoretic techniques, Thresholding, Foundation, The role of Illumination, Basic adaptive Thresholding, Optimal Global and adaptive Thresholding, Use of Boundary Characteristics for histogram improvement and local Thresholding, Thresholds Based on Several variables, Region – Based Segmentation, Basic Formulation, Region Growing, Region Splitting and Merging.   \r\nTextbook T1.Digital Image Processing, Rafael C Gonzalez, Richard E Woods, II edition, Pearson Education   \r\nUNIT#            SECTIONS UNIT – I 1.1 - 1.5, 2.1 - 2.6 UNIT – II 3.1 - 3.8, 4.1 - 4.6 UNIT –III 5.1 - 5.11, 6.1 - 6.9 UNIT -IV 7.1 - 7.6, 8.1 - 8.6 UNIT - V 9.1 - 9.6, 10.1 - 10.6', 'CSE', 7, 'www.google.com');
INSERT INTO `course` (`course_name`, `course_id`, `credit`, `course_info`, `dep_id`, `sem`, `url`) VALUES
('Enterprice Resource Planning', '7CS_EC01', 4, ' ENTERPRISE RESOURCE PLANNING (4-0-0-4)  \r\nOBJECTIVE The course helps student to know the strategic importance of Enterprise Resource Planning Application in industry. The course focuses on the basics of ERP, to understand the key implementation issues of ERP, the business modules of ERP, to be aware of some popular products in the area of ERP and finally to appreciate the current and future trends in ERP.  \r\nUNIT I                         10 Hrs  \r\nERP Overview: Definition of ERP, Need for an ERP, History of ERP Application, Benefits from and ERP System, ERP and enterprise applications – emerging trends, ERP as a subset of Enterprise applications ERP Implementation: ERP Lifecycle, Methodology for Implementation Business Case and ROI Analysis for ERP: Cost of ERP Implementation, Building business case – Case study                     UNIT II       10 Hrs  \r\nBusiness Process Reengineering: BPR, pros and cons of BPR, Process Redesign, Reengineering phases, Role of IT in BPR and Business Engineering, BPR and ERP, Benchmarking, Best Practices Business Process Modelling and Business Modelling: BPM Introduction, Business Process Hierarchy, Standards for Business Processes and modelling, Process Modelling maturity and multidimensional modeling, Process Modelling software, Business Modelling, Integrated Data Modelling Change Management: Change management for the ERP project team, Change team and change management roles, Activities during Lifecycle of a project, Change Management methodology, Six Key processes of ASAP Success or failure of ERP implementation: Reasons for failures of an ERP Implementation, Reasons for success of ERP implementation                     UNIT III      12 Hrs  \r\nERP Functional Modules / Human Capital Management: Introduction, Human Capital Management Systems, Leading HR Solutions from ERP Vendors, Strategic Vs. operational HR processes and HR Outsourcing, Employee Health and Safety Financial Management: Introduction, ERP Financial Application, Financial Modules in Detail Procurement and Inventory management:  Procurement, Inventory Management Production Planning and Execution: Understanding MRP II Concepts, How ERP PP module supports MRP II Processes, Critical master Data Elements, Managing different Production Scenarios Supply Chain Planning: Supply chain planning, Supply chain planning modules, collaborative planning \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 30    \r\nProduct Lifecycle Management: Introduction, What is PLM – Business Drivers and Value proposition, Different phases of PLM, Difference of PLM with ERP, PLM functionalities, Product Safety and Environmental Compliances                       UNIT IV     10 Hrs  \r\nComputing Architecture of ERP-Enterprise Systems: Introduction, Client Server Computing Architecture, Evolution of Business Process, Organizational Structure and IT Architecture Comparative Analysis of ERP Software: Introduction, ERP Market, SAP, SSA Global/Baan, IFS, ERP Product Life Cycle, The Magic quadrant, Functional and Technical Features Comparison. Selecting ERP Consulting Partner: Things to be considered for partner selection, Request for proposal method, In-house implementation Vs. External consultants, ERP Consulting companies. ERP Package Selection: Introduction, ERP Selection – a two step process    \r\n                                                                   UNIT V       10 Hrs  \r\nERP and Enterprise applications – Emerging trends: New models of deploying ERP and Enterprise Applications, New technology for more effective ERP deployment Case Studies: mySAP Business at ITC, Nestle GLOBE project, Oracle ERP for Maruti Suzuki, Siebel CRM at Bharti Airtel, i2 Suppy chain solution at Asian Paints ERP Mini Lab hands-on using SAP-ByDesign- Product Textbooks:  T1 - Rajesh Ray, “Enterprise Resource Planning- Text & Cases”, Tata McGraw Hill, New Delhi, 2011. T2 – Mahadeo Jaiswal, Ganesh Vanapillai – “Text book of Enterprise Resource Planning”, Macmillan India Pvt Ltd, 2005    \r\nUNIT # TEXT : SECTION / PAGES UNIT – I T1 – Pg  3 – 63  UNIT – II T1 – Pg 126-161, 217-239 UNIT – III T1 – Pg 279- 329, 350-379, 468-483 UNIT – IV T1 – Pg 65 – 86 T2 – Pg 79 - 121 UNIT – V T1  - Pg 524 – 542, 587 - 594', 'CSE', 7, 'www.google.com'),
('Adhoc Sensor Networks', '7CS_EC02', 4, ' ADHOC SENSOR NETWORKS (4-0-0-4)  \r\nOBJECTIVE The goal of the course is that students will develop an understanding of advanced topics in wireless networking technology, including fundamental network design concepts/algorithms and existing network protocols.  Specifically, students are expected to be able to analyze the design principles and communication protocols in wireless ad hoc & sensor networks, examines current problems and proposed solutions in wireless ad hoc & sensor networks and design and optimize communication protocols and algorithms in sensor networks.  \r\n UNIT I 09 Hours  \r\nIntroduction: Cellular and Ad Hoc Wireless Networks, Applications of Ad Hoc wireless networks, Wireless Sensor Networks, Hybrid wireless networks:  Issues in Ad Hoc Wireless Networks, Ad hoc wireless internet : MAC Protocols for Ad Hoc Wireless Networks : Introduction, Issues in designing a MAC protocol for Ad Hoc wireless networks, Design Goals for a MAC Protocol for Ad Hoc wireless networks,   Classification of MAC Protocols: Contention based protocols, Contention based protocols with reservation mechanisms, Contention based MAC protocols with scheduling mechanisms, MAC protocols that use directional antennas, and Directional Busy-tone based MAC protocols, Directional MAC protocols for Ad Hoc Wireless Networks, Other MAC Protocols.  \r\n UNIT II 09 Hours  \r\nRouting Protocols for Ad Hoc Wireless Networks : Introduction, Issues in designing a routing protocol for Ad hoc wireless networks, Classification of routing protocols, Table-driven routing protocols, On-demand routing protocols, Hybrid routing protocols,  Routing protocols with efficient flooding mechanisms, Hierarchical routing protocols, Power-aware routing protocols Multicast Routing Protocols : Issues in designing a multicast routing protocol, Operation of multicast routing protocols, Architecture reference model for multicast routing protocols, Classification of multicast routing protocols, Tree based multicast routing protocol : Bandwidth efficient multicast routing protocol, Multicast routing protocol based on zone routing, Associativity-based Adhoc Multicast routing, Energy Efficient Multi Casting.  \r\n UNIT III 12 Hours  \r\nTransport Layer and Security Protocols for Ad Hoc Networks: Introduction, Issues in designing a transport layer protocol, Design goals of a transport layer protocol, Classification of Transport Layer Solutions, TCP over Ad hoc Wireless, Networks, Other Transport Layers for Ad hoc wireless networks, Ad hoc transport protocol, Security I Ad hoc wireless networks, Network Security Attacks, Key Management, Secure Routing in Ad hoc wireless networks.  \r\n UNIT IV 10 Hours  \r\nQuality of Service Frameworks for Ad hoc Wireless Networks: QoS Models, QoS resource reservation signaling, INSIGNIA, INORA, SWAN, Proactive RTMAC,   Energy Management in Ad hoc Wireless Networks: Introduction, Need for energy management, Classification of energy management schemes, Battery management schemes : Battery characteristics, Device dependent schemes, Data link layer solutions, Network layer solutions, \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 32    \r\nTransmission Power Management Schemes : Data link layer solutions, Network layer solutions, Higher Layer Solutions, System Power Management Schemes.  \r\n   UNIT V 12 Hours  \r\nWireless Sensor Networks: Introduction, Application of  Sensor Networks, Comparison with Ad hoc wireless networks, Issues and challenges in design, Sensor Network Architecture, Data Dissemination : Flooding, Gossiping, Rumor routing, Sequential assignment routing, Sensor protocols for information via Negotiation, Cost Field Approach, Geographic hash table Data Gathering: Direct transmission, Power efficient gathering for sensor information systems, Binary scheme, chain based three level scheme. MAC Protocols for Sensor Networks, Location Discovery, Quality of a Sensor Network   \r\nTextbook  \r\nT1.Ad Hoc Wireless Networks – Architectures and Protocols, C.Siva Ram Murthy and B.S. Manoj, Pearson Education, 2004 T2.Wireless Sensor Networks: An information Processing Approach, Feng ZHAO and Leonidas GUIBAS, Morgan Kaufmann Publishers, 2004   \r\nUNIT#            SECTIONS UNIT – I         5.1-5.5, 6.1-6.11 UNIT – II        7.1-7.11, 8.1-8.9 UNIT – III       9.1-9.14 UNIT – IV     10.6-10.8, 11.1-11.8 UNIT – V      12.1-12.11', 'CSE', 7, 'www.google.com'),
('Mobile System Engineering', '7CS_MSE', 4, ' MOBILE SYSTEM ENGINEERING (4-0-0-4) \r\nOBJECTIVE: Mobile devices like Smartphone and Tablets are witnessing explosive growth in their acceptance in the recent years. One may foresee more and more people using these devices for activities such as mailing, browsing etc as compared to doing the same with the traditional computers. Mobile systems represent a synthesis of wireless communication, embedded computing and mobility. The mobility aspects inherent in such a computing environment demands specialized system software and newer application architectures. In this context, it becomes essential for the student of computer science to learn how these mobile systems work at system level and to develop software applications for such a computing paradigm. The Mobile Systems Engineering course is uniquely designed to combine the core engineering principles involved in wireless communication and mobile systems software with the mobile application development. This course encourages the students to dwell deeper in to this rapidly emerging technology through innovative practical experiments.   \r\n  UNIT – I Overview of Mobile Systems: \r\n12 Hours \r\nOverview of mobile landscape with some application scenarios, defining characteristics of a mobile device, intersection of mobile systems with embedded, wireless systems and application architectures, a walkthrough of key specifications of representative devices, mobile systems engineering in perspective. Physical Layer Concepts: Frequency spectrum, Examples for frequency allocation, Space Division Multiplexing, Frequency Division Multiplexing, Time Division Multiplexing, Code Division Multiplexing, Basic operations of cellular systems Wireless Media Access Control layer: Network Architecture, Communication Model, Duplexing, Wireless issues Fundamental MAC protocols – FDMA, TDMA, CDMA, SDMA. Basics of GSM, GPRS, WLAN, Bluetooth     UNIT – II Android System Programming:                                 10 Hours Android Architecture – Anatomy and Physiology, Kernel layer: Booting, Memory layout, Process Context and Interrupt Context, Kernel Timers, Concurrency in the kernel, Kernel threads, Helper Interfaces. Hardware Block Diagram, Buses, Linux device model, Character and Block drivers. DVM Instructions, DEX file format.  \r\n  UNIT – III \r\niOS Development: \r\n12 Hours \r\nOverview of application development in iOS, Anatomy of an Application, XCode, MVC, iPhone and iPad Objective C: Objects, Classes, Messaging, Protocols, Properties, Categories, Associative References, Exception handling, Threading. iPhone/iPad App development: Foundation framework, Object Life cycle, Memory Management, UI Kit, File and Data Management, Event Handling: Event Handling, Events and Touches, Multi-touch events.  \r\n  UNIT – IV Android Application Programming: \r\n12 Hours \r\nOverview of application development in Android: Application components, Activating components through Intents, Manifest File, Activities and Tasks, Processes and Threads, Component life cycles, Processes and Lifecycles  Android GUI Programming, Event driven programming and callback functions, Using services, Multithread Programming in Android \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 10    \r\n  UNIT – V \r\nAdvanced Topics: \r\n6 Hours \r\nData Access methods in Android, Mobile and Cloud computing, Accessing Web from mobile, Context Aware Computing.   \r\nTextbook:          T1:Mobile Communications – Jochen Schillier, Pearson Edition          T2: Handbook of Wireless Networks and Mobile Computing edited by Ivan Stojmenovic Wiley India Edition T 3: Android in Action by W.Frank Ableson, Robi Sen, Chris King by Manning Publications T4: iPhone SDK Application Development  by Jonathan Zdziarski O?Reilly Media Inc   \r\nReferences: Android Developer Guide http://developer.android.com/guide/index.html  iPhone Developer Guide  http://developer.apple.com/devcenter/ios/index.action', 'CSE', 7, 'www.google.com'),
('Mobile System Engineering Laboratory', '7CS_MSEL', 1, ' MOBILE SYSTEM ENGINEERING LABORATORY (0-0-2-1)  \r\nProgram # 1: Program to demonstrate Android Layouts and GUI  \r\nProgram # 2:  Program to demonstrate dynamic UI with fragments in Android \r\nProgram # 3: \r\nProgram to demonstrate data storage in Android  \r\nProgram # 4: Program to demonstrate interaction between apps in Android  \r\nProgram # 5: Program to demonstrate Multimedia in Android  \r\nProgram # 6: Program to demonstrate connectivity among devices / cloud using Android  \r\nProgram # 7: Program to demonstrate usage of location info in Android  \r\nProgram # 8: Program to demonstrate GUI in iOS  \r\nProgram # 9: Program to demonstrate data storage in iOS  \r\nProgram # 10: Program to demonstrate Multimedia in iOS  \r\nProgram # 11: Program to demonstrate connectivity among devices / cloud using iOS  \r\nProgram # 12: Program to demonstrate usage of location info in iOS', 'CSE', 7, 'www.google.com'),
('Object Oriented modelling And Design', '7CS_OOMD', 4, ' OBJECT ORIENTED MODELING AND DESIGN   (4-0-0-4)  \r\nOBJECTIVE  Understand principles of Object Oriented Modeling and Design. Understand UML and be able to apply it to model systems. Understand design, implementation, and architectural issues. Understand implementation solutions such as patterns and frameworks  \r\n UNIT I 16 Hours  \r\nIntroduction, Use Cases and Class Models: Introduction to Modeling, Introduction to UML, Use Case Models, Class Modeling, Object Constraint Language, Advanced Class Modeling, Application to Case Study  \r\n UNIT II 8 Hours  \r\nActivity and Sequence Models: Activity Models, Business Process Models, Sequence Models, ATM Case Study: Application Class/Interaction Models, Application to Case Study   \r\n UNIT III 10 Hours  \r\nState Models: State Models, Advanced State Models, Relationship between Class and State Models, Application to Case Study  \r\n UNIT IV 8 Hours System Design: Component and System Design, Class Design, Implementation Models, Deployment Models, Object-Relational Mapping, Database Design  \r\n UNIT V 10 Hours  \r\nDesign Patterns and Frameworks:  Design Patterns, Software Frameworks, Overview of Industry Standard Frameworks, Application to Case Study   \r\nText book T1. Object-Oriented Modeling and Design with UML, Michael R Blaha and James R Rumbaugh, 2nd Edition, 2005, Pearson      \r\nReference book R1. The Unified Modeling Language User Guide, Grady Booch, James Rumbaugh, and Ivar Jacobson, 2nd Edition, 2005, Pearson  \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 8    \r\nUNIT#  Sections UNIT – I       1, 2, 7.1, 10, 11, 3.1 – 3.4, 12.1, 12.2, 3.5, 4, 12.2 UNIT – II      7.3, 8.3, 13.1, 7.3, 8, 13.1, 13.2 UNIT – III     5, 12.3, 6, 13.3, 9  UNIT – IV    14, 15, 17, 18, 19 UNIT – V     21, 22, 23 ', 'CSE', 7, 'www.google.com'),
('Object Oriented Modelling and Design Laboratory ', '7CS_OOMDL', 1, ' OBJECT ORIENTED MODELING AND DESIGN LABORATORY (0-0-2-1)  \r\nProgram # 1: Expectations and Introduction to Lab Case Study, Introduction to StarUML tool  \r\nProgram #2: Prepare Use Case Diagrams for the Case Study given.  \r\nProgram #3: Prepare Class Diagrams for the Case Study given.  \r\nProgram #4: Prepare Class Diagrams for the Case Study given.  \r\nProgram #5: Prepare Activity Diagrams for the Case Study given.  \r\nProgram #6: Prepare Sequence Diagrams for the Case Study given.  \r\nProgram #7: Prepare Sequence/Collaboration Diagrams for the Case Study given.  \r\nProgram #8: Prepare State Diagrams for the Case Study given.  \r\nProgram #9: Prepare Component Diagrams for the Case Study given.  \r\nProgram #10: Prepare Deployment Diagrams for the Case Study given.  \r\nProgram #11: Prepare Database Design for the Case Study given.  \r\nProgram #12: Presentation of Solution', 'CSE', 7, 'www.google.com'),
('Web 2.0 and Rich Internet Applications', '7CS_WRIA', 4, ' WEB 2.0 AND RICH INTERNET APPLICATIONS (4-0-0-4)  \r\nOBJECTIVE This course is a continuation of the Web Technologies beginner?s course which was learnt in the 6th semester. In the beginners? course students were introduced to HTML, CSS, and basics of JavaScript, DOM and PHP. In this course they will learn advanced techniques of web design. Following this course, students will be able to design complete web sites with client and server side implementations. Technologies dealt with here include XML, HTML5, CSS3, AJAX, and JSON, COMET and Web Services along with mashups and an introduction to Service Oriented Architecture.   \r\n                                                                    UNIT I                                                                09 Hours  \r\nIntroduction: From Browsers to Rich Clients – browser drawbacks, A solution – rich clients, Rich clients today. Web 1.0: HTML, URLs and HTTP, The WEB Model and REST – resources, representations, state, transfer – using HTTP methods. XML, XPATH and XSLT – XML Support in browsers, XPath support in browsers, XSL Transformation support in Browsers   \r\n                                                                     UNIT II                                                              12 Hours  \r\nHTML 5: Detecting HTML 5 features – Canvas, video, local storage, web workers, offline applications, geolocation, placeholders, and input types. What does it all mean – doctype, root, headers, articles, dates and times, navigation and footers. Let?s call it a drawing surface – Simple shapes, canvas, Paths, texts, gradients and images. The past, present and future of local storage for web applications, let?s take this offline – Cache manifest, network sections, fallback sections, A Form of madness – place holders, autofocus fields, email, web addresses, and numbers as spinboxes and sliders, date and color pickers, search boxes.   \r\n                                                                       UNIT III                                                           10 Hours AJAX-I:  Basic communication techniques – Hidden Frames GET requests, XHR, AJAX with images, Dynamic script loading, Cache control. AJAX patterns: Communication control patterns – predictive fetch, page preloading, submission throttling, periodic refresh, multi-stage download. Fallback patterns, AJAX libraries – JQuery    \r\n                                                                       UNIT IV                                                           12 Hours AJAX-II:  Request Management – Priority Queues, The RequestManager object, using RequestManager Syndication with RSS and Atom – RSS, Atom, XParser, Creating a news ticker, Web search with RSS JSON – Array, object, mixing literals, syntax, encoding/decoding, JSON versus XML, server-side JSON tools. \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 6    \r\n                                                                   UNIT V                                                               09 Hours  \r\nReverse AJAX and Web services: COMET: HTTP streaming – request delays, file modification example, using Iframes, browser-specific approaches, server-sent DOM events, connection management and server-side support.  Introduction to Service Oriented Architecture, Combining protocols to build Web services – clarifying web services, REST Services, WS-* Web services using SOAP and WSDL, REST vs WS-* services.   \r\nTEXT BOOKS  \r\n1. Professional AJAX, 2nd Edition - Nicholas C Zakas et al, Wrox publications, 2007. 2. Professional Web 2.0 Programming – Eric Van Der VList et al, Wrox Publications, 2007 3. HTML 5 Up and Running – Mark Pilgrim, O?REILLY| GOOGLE Press, 2010.  4. SOA: Concepts, Technology and Design – Thomas Erl, Pearson, 2005', 'CSE', 7, 'www.google.com'),
('Web 2.0 And Rich Internet Laboratory', '7CS_WRIL', 1, ' WEB 2.0 AND RICH INTERNET LABORATORY (0-0-2-1)   \r\nProgram# 1: To demonstrate usage of XHTML elements with CSS-3  \r\nProgram# 2: HTML 5 – I: To demonstrate usage of basic HTML 5 tags.  \r\nProgram# 3: HTML 5 – II: To demonstrate usage of Web workers.  \r\nProgram# 4: HTML 5 and AJAX-1: To demonstrate usage of AJAX and HTML 5 tags with local storage.   \r\nProgram# 5: AJAX-2: To demonstrate multistage download using AJAX.  \r\nProgram# 6: AJAX-3: To demonstrate usage of AJAX, HTML5 with JQuery.  \r\nProgram# 7: AJAX-4: To demonstrate periodic refresh (with cancel feature).  \r\nProgram# 8: AJAX – 5: To demonstrate web search using RSS.  \r\nProgram# 9: AJAX – 6: To demonstrate usage of JSON and AJAX using PHP.  \r\nProgram# 10: To demonstrate usage of Comet technology  \r\nProgram# 11: To demonstrate REST web services using PHP.  \r\nProgram# 12: To demonstrate Mashups', 'CSE', 7, 'www.google.com'),
('Project Work', '8CS_PW', 22, 'PROJECT WORK', 'CSE', 8, 'www.google.com'),
('Software Testing', '8CS_ST', 3, ' SOFTWARE TESTING (3-0-0-3)   \r\nObjective: The course is designed to give introduction to Software testing. On successful completion of the course, students should be familiar with various types of testing, able to apply proper testing technique in software development, able to write test cases, appreciate difficulties and complexities in software quality and be able to plan proper quality approach in software projects. Students would be introduced to Test automation. They would be exposed to software Quality engineering, Quality assurance.   \r\nUNIT – I     06Hours  \r\nIntroduction to Software Quality and Testing: Introduction to Software Quality and its importance: SDLC Process and testing, SQA processes, ETVX Model, Software Quality Measurements. Effects of not testing; Finding faults early; Verification & Validation; Test Life Cycle; Classification of testing types based on method / Requirement / target / needs White Box Testing: Definition, Static Testing – Manual, tool based, Structural testing – Unit Testing, Code coverage Testing, Code complexity testing, Advantages and disadvantages   \r\n  UNIT – II                            08 Hours  \r\nBlack Box Testing:  Definition and overview, Test Case Design techniques for Black Box Testing: Specification based test design and Requirements Traceability Matrix, Positive and negative testing, Equivalence Partitioning, Boundary Value Analysis, State Transition Tables, Decision Tables, Advantages and disadvantages. Case Study Integration Testing Overview, top-down integration, bottom-up integration, System Integration, Scenario Testing JUnit Tool:  Hands-on exercise, Test Case Design exercise.   \r\n  UNIT – III                                          09Hours  \r\nSystem Testing and Acceptance Testing Definition, reason and overview, Functional System testing and types- Design verification, Business vertical, Deployment testing, Smoke/ Sanity Testing Acceptance Testing Overview, Types: User Acceptance Testing, Operational Acceptance Testing, Alpha and Beta Testing Adhoc testing:  Overview, Buddy / pair testing, exploratory testing, iterative testing, defect seeding, defect bash Regression Testing: Definition, Types of regression testing, when and how to do regression testing.   \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 47      \r\n UNIT – IV      10 Hours \r\nNon Functional Testing: NFT Overview, Scalability, Reliability, Stress testing, Performance Testing Overview, methodology for performance testing, Usability, Localization and Globalization Testing Tools and Automated Testing Functional Testing Automation tool demo / hands-on (QTP/ Selenium/OpenSTA) Automation overview, scope of automation, Design and architecture of test automation framework, selecting testing tool,  Study of STAF – Software Test Automation Framework (Open Source) - Basic Concepts, Services, Commands.  \r\nUNIT – V      6 Hours  \r\nTest planning and Management, Testing Metrics, Defect management Test planning, Test management, Test process, Test reporting, Metrics overview, types of metrics – project, progress, and productivity metrics Defect management, Bugzilla tool – demo/hands-on; Advances in Testing: Virtualization of Test Environments, Cloud based testing, Model Based Testing   \r\nBook Type Code Author & Title Publisher \r\nTextbook T1 \r\nSoftware Testing – Principles and Practices, Srinivasan Desikan and Gopalswamy Ramesh \r\nPearson \r\nReference T2 Foundations of Software Testing,  Aditya Mathur Pearson \r\nReference T3 \r\nSoftware Testing, A Craftsman?s Approach, Paul C. Jorgensen. ', 'CSE', 8, 'www.google.com');

-- --------------------------------------------------------

--
-- Table structure for table `department`
--

CREATE TABLE IF NOT EXISTS `department` (
  `dep_name` varchar(20) NOT NULL,
  `dep_id` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `department`
--

INSERT INTO `department` (`dep_name`, `dep_id`) VALUES
('BTE', 'BTE'),
('CSE', 'CSE'),
('CV', 'CV'),
('ECE', 'ECE'),
('EEE', 'EEE'),
('ISE', 'ISE'),
('ME', 'ME');

-- --------------------------------------------------------

--
-- Table structure for table `pre_req`
--

CREATE TABLE IF NOT EXISTS `pre_req` (
  `course_id` varchar(20) NOT NULL,
  `pre_name` varchar(60) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `pre_req`
--

INSERT INTO `pre_req` (`course_id`, `pre_name`) VALUES
('4CV_HMT', 'ALTERNATIVE BUILDING MATERIALS AND TECHNOLOGIES THEORY'),
('4CS_LA', 'Analysis and Designn of Algorithm'),
('4CS_ADA', 'Mathematics-III for computer science'),
('4CS_LA', 'Mathematics-III for computer science'),
('4CS_DBMS', 'Object Oriented modelling And Design'),
('3CS_DSJ', 'Programming with c');

-- --------------------------------------------------------

--
-- Table structure for table `semester`
--

CREATE TABLE IF NOT EXISTS `semester` (
  `sem` int(3) NOT NULL,
  `total_credit` int(3) NOT NULL,
  `dep_id` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `semester`
--

INSERT INTO `semester` (`sem`, `total_credit`, `dep_id`) VALUES
(1, 26, 'BTE'),
(1, 26, 'CSE'),
(1, 26, 'CV'),
(1, 26, 'ECE'),
(1, 26, 'EEE'),
(1, 26, 'ISE'),
(1, 26, 'ME'),
(2, 26, 'BTE'),
(2, 26, 'CSE'),
(2, 26, 'CV'),
(2, 26, 'ECE'),
(2, 26, 'EEE'),
(2, 26, 'ISE'),
(2, 26, 'ME'),
(3, 26, 'BTE'),
(3, 26, 'CSE'),
(3, 26, 'CV'),
(3, 26, 'ECE'),
(3, 26, 'EEE'),
(3, 26, 'ISE'),
(3, 26, 'ME'),
(4, 26, 'BTE'),
(4, 26, 'CSE'),
(4, 26, 'CV'),
(4, 26, 'ECE'),
(4, 26, 'EEE'),
(4, 26, 'ISE'),
(4, 26, 'ME'),
(5, 25, 'BTE'),
(5, 25, 'CSE'),
(5, 25, 'CV'),
(5, 25, 'ECE'),
(5, 25, 'EEE'),
(5, 25, 'ISE'),
(5, 25, 'ME'),
(6, 25, 'BTE'),
(6, 25, 'CSE'),
(6, 25, 'CV'),
(6, 25, 'ECE'),
(6, 25, 'EEE'),
(6, 25, 'ISE'),
(6, 25, 'ME'),
(7, 25, 'BTE'),
(7, 25, 'CSE'),
(7, 25, 'CV'),
(7, 25, 'ECE'),
(7, 25, 'EEE'),
(7, 25, 'ISE'),
(7, 25, 'ME'),
(8, 25, 'BTE'),
(8, 25, 'CSE'),
(8, 25, 'CV'),
(8, 25, 'ECE'),
(8, 25, 'EEE'),
(8, 25, 'ISE'),
(8, 25, 'ME');

-- --------------------------------------------------------

--
-- Table structure for table `special_topic`
--

CREATE TABLE IF NOT EXISTS `special_topic` (
  `topic_id` varchar(20) NOT NULL,
  `topic_name` varchar(30) NOT NULL,
  `topic_info` varchar(10000) NOT NULL,
  `sem` int(3) NOT NULL,
  `dep_id` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `special_topic`
--

INSERT INTO `special_topic` (`topic_id`, `topic_name`, `topic_info`, `sem`, `dep_id`) VALUES
('3CS_BUS', 'Basics of unix progarmming', 'basic of unix shell progarmming, shell commands', 3, 'CSE'),
('3CS_excel', 'mastering excel', 'excel progarmming', 3, 'CSE'),
('4CS_ADS', 'Advanced data structure', 'data structure', 4, 'CSE'),
('4CS_CIM', 'Cloud infrastructure manegment', 'cloud', 4, 'CSE'),
('4CV_BCE', 'Basics of Construction Economi', 'Class	Lesson	% Coverage	%\r\nCumulative\r\n\r\n1	Foundations of Engineering Economy	8.33	8.33\r\n2	How time and interest affect money	8.33	16.67\r\n3	Nominal and effective interest rates	8.33	25\r\n4	Present worth analysis	8.33	33.33\r\n5	Future Worth analysis	8.33	41.67\r\n6	Annual worth analysis	8.33	50\r\n7	Rate of return analysis	8.33	58.33\r\n8	Benefit cost analysis	8.33	66.67\r\n9	Breakeven, sensitivity analysis	8.33	75\r\n10	Replacement and retention analysis	8.33	83.3\r\n11	Depreciation methods	8.33	91.67\r\n12	Effects of inflation	8.33	100\r\n\r\nReference Book: Basics of Engineering Economy, Leland Blank and Antony \r\nTarquin,  McGraw Hill Education (India) Private Limited, Indian Edition.\r\n', 4, 'CV'),
('4CV_RA', 'Revit Architecture', 'Class	Portions to be Covered	% Portions Covered\r\n		Referred Chapter	Cumulative\r\n0-1	Introduction of Revit User Interface Create and Modify levels, Walls to the Basic Floor Plan.	3.8	3.8\r\n2-3	Working with Curtain Walls and Sweep Wall and reveal and edit its profile.	7.7	11.5\r\n4-5	Adding and Modifying Doors, Windows Loading and working with building components, creating and modifying floor Adding and Modifying Roofs.	7.7\r\n	19.2\r\n6-7	Create and Modify Ceiling Adding Railing, Strais and Ramp. Creating Rooms and Room Tags, Create legends.	7.7	26.9\r\n8-9	Import a View and a CAD file	7.7	34.6\r\n10-11	Working with Dimensions, Creating Callout Views, Sections views	7.7	42.3\r\n12-13	Creating Schedules, Work with Text and Tags.	7.7	50\r\n14-15	Creating camera view and walkthrough, Creating Rendering	7.7 	57.7\r\n16-17	Work with drawing sheets, Structural elements and grids	7.7	65.4\r\n18-20	Projects	11.5	76.9\r\n21-22	Working with families and Working with component families	7.7	84.6\r\n23-26	Projects	15.4	100 \r\n', 4, 'CV'),
('5CS_PELL', 'Personal experiment learning l', 'FIRO-B\r\nJOHIRI-WINNDOW MODEL', 5, 'CSE'),
('5CS_YOGA', 'YOGA', 'ASANAS', 5, 'CSE'),
('6CS_BD', 'Big Data', ' BIG DATA (4-0-0-4) \r\nObjective: The course is designed to give introduction to Bigdata and provide Sample exposure to tools used for Cloud taxonomy.  \r\n UNIT I                                                              08 Hours  \r\nINTRODUCTION  Cloud computing introduction, Cloud taxonomy, Cloud service and deployment Models, Big Data definition, Challenges and opportunities with Big Data, Data intensive scientific discovery and the role of Big Data.   \r\nBIG DATA PROGRAMMING INFRASTRUCTURES  Introduction to MapReduce, Pig, Mahout, Open-R   \r\nUNIT II                                                              10 Hours   \r\nBIG DATA INFRASTRUCTURES  Big Data infrastructure – definition and categorization, Batch processing versus Stream processing, Batch processing infrastructures – Hadoop, Spark, Disco, HPCC, Stream processing infrastructures – Storm, Introduction to newer infrastructures – InfoSphere Streams and S4.   UNIT III                                                              15 Hours   \r\nRESOURCE ALLOCATION AND SECURITY IN BIG DATA INFRASTRUCTURE CLOUDS Resource management for computation and communication in Big Data infrastructures (DOT), Cluster sizing and resource allocation in IaaS cloud platforms (Elastisizer), Resource sharing to improve cluster utilization (Mesos), Security and Privacy challenges pertinent to public cloud computing, Data encryption on third-party clouds, SQL-aware encryption schemes, Exploring information leakage in third-party clouds, VM-attacks.   \r\nUNIT IV                                                               15 Hours   \r\nSCALABLE STORAGE SYSTEMS FOR BiG DATA  Classic systems – Google, HDFS, GlusterFS, Ceph, BigTable, New database paradigms – NewSQL, NOSQL: HBase, MongoDB, Cloud Storage – Megastore, Azure, In-Memory data storage: RAM clouds, SPARK, Key-value stores: Dynamo.   \r\nUNIT V                                                                04 Hours   \r\nCASE STUDIES  PNUTS: Yahoo!?s Hosted Data Serving Platform.  Finding a Needle in a Haystack: Facebook?s photo storage  HIVE: A Petabyte Scale Data Warehouse using Hadoop. 2  ', 6, 'CSE'),
('6CS_SN', 'Social Networks', ' SOCIAL NETWORKS (4-0-0-4)   \r\nOBJECTIVE  Social Computing in a broad sense enables computers and humans to collaborate to a level not imagined earlier. Social Networks connect billions of people, store huge content and are growing every day. The objective of this course is to expose students to the tools and technologies in this domain so that they appreciate the power of Social Computing. The focus of the course is on structural and dynamic analysis of social networks and applications of collective intelligence.    \r\n                                                       Unit I                                                                      12 Hours  \r\nSocial Networks and Structural Analysis                                                     Introduction to Social Networks; Structural Analysis of Networks: Graphs & Adjacency matrices, Path Length, Degree Distribution, Clustering, Small World, Power Law, and Centrality measures, PageRank, Community Detection, Robustness to failure;   \r\nUnit II                                                                      12 Hours   \r\nDynamics and Evolution of Networks                                                           Dynamics on networks (information diffusion): Algorithmic small world, routing in social networks, influential detection, Cascades (epidemics) on networks  Dynamics (Evolution) of networks: Preferential attachment, Master equation method, Effect of network evolution on structural properties.                                                         Unit III                                                                     10 hours  \r\nNetwork Analysis Project                                                                             Implementation Project that is using open APIs of networks such as Facebook and Twitter   \r\nUnit IV                                                                      8 hours   \r\nCollective Intelligence – Applications of Social Networks                              Collaborative Filtering, Reputation Systems, Crowd-sourcing, Prediction Markets, Online Auctions    \r\nUnit V                                                                    10 Hours   \r\nProject based on topics covered in unit 4                                                       Students choose any one of the Collective Intelligence Applications and develop a prototype.     \r\nText Book:  1. Primarily relies on class-room material. References listed below. ', 6, 'CSE'),
('6CV_AD', 'ARCHITECTURAL DESIGN–BASIC CON', 'Class	Unit	Portions to be Covered	% Portions Covered\r\n			Referred Chapter (%)	Cumulative (%)\r\n  1-8	Unit 1	 Introduction \r\nArchitecture and relation to civil Engineering\r\nPrimary Elements Point, Point Elements; Line, Linear Elements; Line to Plane; Plane, Planar Elements \r\nVolume, Volumetric elements\r\nForm: Visual Proportions of Form, Shape , Primary Shapes, Regular and Irregular forms, Transformation of forms, Types of transformation, Centralized, Linear, Radial, Clustered, Grid Forms, Articulation of Forms, Edges and corners, Surfaces.	30.8	30.8\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n9-17	Unit 2	Form & Space: Form & space; the unity of opposites, Form defining space, Defining space with horizontal elements; Base plan, Elevated plan, Depressed Planes, the overhead plane, Defining space with Vertical Elements; Vertical linear elements, Single vertical plane, L-shaped Planes, Parallel Planes, u-shaped Planes, closure, Qualities of Architectural Space; Degree of closure, Light , View, Openings in space-defining elements; Within Planes, At corners, Between Planes.\r\n Assign 1: Hands-on exercise for students about the concepts learnt in groups. \r\nOrganizations of form & Space:\r\nSpatial Relationships, Spatial organizations	34.5	65.3\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n18-26	Unit 3	Circulation: Forms of circulation spaces, Types of approach \r\nProportion & scale: \r\nProportioning systems, Scale \r\nPrinciples of Design:Ordering Principles; axis, symmetry, Hierarchy, Rhythm & Repetition \r\nAssign 2: Hands-on exercise for students about the concepts learnt in groups. Architects and Architectural work: \r\nIntroduction to famous Architects and their buildings with the concepts they have followed. \r\nAssign 3: Case-study on an Architect with his Architecture work. Explain the work by the concepts studied in the semester.	34.5	\r\n\r\n\r\n\r\n\r\n\r\n\r\n100\r\n', 6, 'CV'),
('6CV_PPM', 'PROJECT PLANNING, MANAGEMENT &', 'PROJECT PLANNING, MANAGEMENT & PRIMAVERA (FOUNDATION)\r\nClass	Topics\r\n\r\n\r\n           1&2	Introduction\r\nInitiating Process Group 	User Preference \r\nPlanning process Group\r\n About Projects, Calendar, Standard weeks, Exception. \r\n\r\n\r\n\r\n 3&4	WBS \r\no Introduction about Relationship \r\no Dissolve Activity \r\no Apply Lead or Lag \r\n\r\n\r\n\r\n\r\n\r\n5&6	\r\n About Critical Path Method \r\no Introduction about Constraints \r\no Introduction about Codes \r\no Introduction & Creation of Roles \r\n\r\n7&12	 \r\nIntroduction about Resources \r\no Assigning Resources to an Activity \r\no Assign Role to an Activity \r\no Resource Leveling \r\n\r\n\r\n\r\n\r\n13&16	 About Baseline \r\n Introduction about Budget \r\n Budget Summary \r\n\r\n\r\n\r\n\r\n17&20	\r\n                  Introduction about Update \r\n                     Duration Types \r\n\r\n21&23	\r\n       Introduction & benefits about Tracking \r\n       o About Earned Value Analysis \r\n\r\n\r\n24&26	\r\n         Introduction about Reports \r\n         Types of reports in client \r\n        Creation of Reports \r\n\r\n\r\n\r\n\r\n', 6, 'CV'),
('7CS_AIW', 'Algorithm of Intelligent web', ' SOCIAL NETWORKS (4-0-0-4)   \r\nOBJECTIVE  Social Computing in a broad sense enables computers and humans to collaborate to a level not imagined earlier. Social Networks connect billions of people, store huge content and are growing every day. The objective of this course is to expose students to the tools and technologies in this domain so that they appreciate the power of Social Computing. The focus of the course is on structural and dynamic analysis of social networks and applications of collective intelligence.    \r\n                                                       Unit I                                                                      12 Hours  \r\nSocial Networks and Structural Analysis                                                     Introduction to Social Networks; Structural Analysis of Networks: Graphs & Adjacency matrices, Path Length, Degree Distribution, Clustering, Small World, Power Law, and Centrality measures, PageRank, Community Detection, Robustness to failure;   \r\nUnit II                                                                      12 Hours   \r\nDynamics and Evolution of Networks                                                           Dynamics on networks (information diffusion): Algorithmic small world, routing in social networks, influential detection, Cascades (epidemics) on networks  Dynamics (Evolution) of networks: Preferential attachment, Master equation method, Effect of network evolution on structural properties.                                                         Unit III                                                                     10 hours  \r\nNetwork Analysis Project                                                                             Implementation Project that is using open APIs of networks such as Facebook and Twitter   \r\nUnit IV                                                                      8 hours   \r\nCollective Intelligence – Applications of Social Networks                              Collaborative Filtering, Reputation Systems, Crowd-sourcing, Prediction Markets, Online Auctions    \r\nUnit V                                                                    10 Hours   \r\nProject based on topics covered in unit 4                                                       Students choose any one of the Collective Intelligence Applications and develop a prototype.     \r\nText Book:  1. Primarily relies on class-room material. References listed below. ', 7, 'CSE'),
('7SCS_AOST', 'Architecture of open source pr', 'ARCHITECTURE OF OPEN SOURCE TECHNOLOGIES (4-0-0-4)  \r\nOBJECTIVE: A majority of students use the open source software projects in day to day work but rarely get to know how these are designed, implemented and technologies used in them. Thus, when student develop a software system (medium to large systems), they reinvent the wheel and often make the same mistakes as done earlier. The course will help the students to build upon the strengths of existing projects and thus become a much better software developer. Further, this will also enable students to contribute to open source software.    \r\nUnit I                                                              10 hours  \r\nOverview of Web Server Technologies (Apache, Nginx and Boa); Apache web server: evolution, Architecture, module development. Nginx: High performance, high concurrency, low memory based web server. Details of event driven model; the architecture of modular plugins, use of kqueue/epoll, configuration  Boa: The web server for embedded systems. The design philosophy, non-forking model - single process single thread handling of concurrent connections, non-blocking asynchronous I/O  \r\nUnit II                                                              10 hours  \r\nOverview of Twisted Networking Engine, Selenium, Mercurial Distributed CVS Twisted: Event driven networking engine (python), support for common transport and application layer protocols, support for multiplayer games. Selenium: automating the control of browser to perform repeated tasks for testing web based systems. Selenium IDE, Web Driver and Grid Mercurial: Distributed Version Control System. Mercurial?s algorithms and data structures.Differences with CVS, Subversion, Git.  \r\nUnit III                                                             12 hours  \r\nOverview of Asterisk, Floodlight, and Mininet, and Nagios Mininet: tool for creating scalable software defined networks. Process based virtualization, network namespaces, openflow switches. Floodlight: java based controller implementing openflow protocol. Modular plugin architecture, Module descriptions, REST API implementations  Asterisk: IP Telephony, IP PBX, communication server, platform for creating communication applications. Nagios: Monitroing and alerting for IT infrastructure. The nagios core, plugin design, parallelized service checks, defining network hierarchy.  \r\nUnit IV                                                              10 hours  \r\nOverview of Tools used in developing applications and systems Eclipse, GDB and Bash GDB: The first program written for Free Software Foundation, and a staple of free and open source software and systems. It has grown from initial few thousands lines of code to ½ a million lines. The topic will deal with internal structures of GDB and evolution w.r.t new features and user needs. \r\nPESIT Student Handbook 2013-14 Computer Science VII & VIII………………………………………… 40    \r\nBash: Major components, input processing, parsing, word expansions, pipelining and command execution. Eclipse: SDK, Architecture, components sub-projects: The platform, Java Development Tools, and Plug-in Development Environment.  \r\nUnit V                                                               10 hours  \r\nOverview of Yocto, Audacity, Sendmail, and Moodle Yocto: Develop embedded linux systems to build customized distribution,  Sendmail: the most prevalent MTA (Message Transfer Agent) on the Internet. The design principles – no redesign of user agents, local mail store, reliability, the implementation Audacity: Platform for developing audio processing algorithms, discoverability of user interface, libraries based layer architecture. Moodle: Design via plugins, permission system and control, Themes(skins) management, DB Abstraction layer.', 7, 'CSE');

-- --------------------------------------------------------

--
-- Table structure for table `units`
--

CREATE TABLE IF NOT EXISTS `units` (
  `course_id` varchar(20) NOT NULL,
  `unit_id` varchar(20) NOT NULL,
  `unit_name` varchar(20) NOT NULL,
  `chapters` varchar(700) NOT NULL,
  `unit_info` varchar(5000) NOT NULL,
  `url` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `units`
--

INSERT INTO `units` (`course_id`, `unit_id`, `unit_name`, `chapters`, `unit_info`, `url`) VALUES
('3CS_DSJ', '3CS_DSJ1', 'Review of java', 'java abstac class', 'UNIT – I 10 Hours\r\nObject Oriented Programming, Objects and classes-Abstraction ,Encapsulation, Composition,\r\nInheritance ,Polymorphism, Methods-Instance and class methods, Recursion, Exception Handling,\r\nInterface, Inner classes-Anonymous inner class, Reflection-Method, Package, Abstract data type,\r\nArrays, Input output.\r\n', 'www.oracle.com'),
('3CS_DSJ', '3CS_DSJ2', 'LISTS', 'LISTS', 'UNIT – II 10 Hours\r\nList: Interface -Create, Insert, Delete, Update, traverse, implementation-Node based Linked list,\r\nArray implementation of a list, Head node and tail node, Additional behavior -Find , Delete,\r\nReverse, Boundary conditions\r\n U', 'www.google.com/libked_lists'),
('3CS_DSJ', '3CS_DSJ3', 'Stacks and queues', 'stacks \r\nqueues\r\n', 'UNIT – III 12 Hours\r\nStack, Queue and Priority Queue: Stacks-Interface, Implementation-Array Implementation,\r\nLinked List based Implementation, Queues-Interface, Implementation-Array Implementation, Linked\r\nList based Implementation, Circular Queues -Interface, Implementation-Array Implementation,\r\nLinked List based Implementation, Priority Queue-Interface, Implementation-Array ImplementationUnsorted\r\n, Sorted, Linked List based Implementation, List of Lists based Implementation.\r\n', 'www.google.com/sacks'),
('3CS_DSJ', '3CS_DSJ4', 'DOUBLLY LINKED  LIST', 'DOUBLLY LINKED LISTS', 'UNIT – IV 12 Hours\r\nDoubly Linked List-Interface, Implementation-Array Implementation, Linked List based\r\nImplementation.\r\nTrees-Introduction, Binary Tree -Interface and Implementation, Creation, Insertion, Traversal,\r\nGeneral purpose tree and forest-Representation as a binary tree, Binary Search Tree, Introduction\r\nto-AVL tree , 2-4 Tree, Red-Black Tree, B Tree.\r\nHeap- Heap sort, Priority queue implementation using Heap\r\n', 'www.google.com/heaps'),
('4CS_DBMS', '4CS_DBMS1', 'Introduction', 'inttroduction', 'UNIT I 10 Hours\r\nIntroduction; An example; Characteristics of the Database approach; Actors on the scene;\r\nWorkers behind the scene. Advantages of using DBMS approach: A brief history of database\r\napplications, when not to use a DBMS. Data models, schemas and instances; Three-schema\r\narchitecture and data independence, Database languages and interfaces, the database system\r\nenvironment, Classification of Database Management systems, Using High-Level Conceptual Data\r\nModels for Database Design. Entity Types, Entity Sets, Attributes and Keys, Relationship Types,\r\nRelationship Sets, Roles and Structural Constraints, Weak Entity Types, Refining the ER Design\r\nfor the COMPANY Database, ER Diagrams, Naming Conventions, Design Issues. Relationship\r\ntypes of degree higher than two.\r\n', 'www.google.com/dbms'),
('4CS_DBMS', '4CS_DBMS2', 'Relational model con', 'Relational model concepts', 'UNIT II 11 Hours\r\nRelational Model Concepts: Relational Model Constraints and Relational Database Schemas.\r\nRelational Model Constraints and Relational Database Schemas, Update Operations and Dealing\r\nwith Constraint Violations. Unary Relational Operations: SELECT and PROJECT. Relational\r\nAlgebra Operations from Set Theory, Binary Relational Operations: JOIN. Binary Relational\r\nOperations: DIVISION. Additional Relational Operations, Examples of Queries in Relational\r\nAlgebra. Relational Database Design Using ER-to Relational Mapping', 'www.google.com/rmodel'),
('4CS_DBMS', '4CS_DBMS3', 'SQL', 'SQL', 'UNIT III 10 Hours\r\nSQL: SQL Data Definition and Data types. Specifying Basic Constraints in SQL, Schema Change\r\nStatements in SQL Basic Queries in SQL, More Complex SQL Queries; Insert, Delete and Update\r\nStatements in SQL, Additional Features of SQL, Specifying General Constraints as Assertion and\r\ntrigger. Views (Virtual Tables) in SQL. Additional features of SQL, Database programming issues\r\nand techniques. Embedded SQL, Dynamic SQL', 'www.wikipedia/sql'),
('4CS_DBMS', '4CS_DBMS4', 'UNIT4', 'Informal guidences', 'UNIT IV 10 Hours\r\nInformal Design Guidelines for Schemas Functional Dependencies, Normal Forms Based on\r\nPrimary Keys.(1st\r\n ,2nd and 3rd NF). General Definitions of Second Third Normal Forms, BoyceCodd\r\nNormal Form, Properties of Relational Decompositions, Algorithms for Relational Database\r\nSchema Design, Algorithms for Relational Database Schema Design, Multi-valued Dependencies\r\nand Fourth Normal form, Join Dependencies, Fifth Normal Form, Database tuning, multi media.\r\nObject and distributed databases.', 'www.google.com/formal_ddependesis'),
('4CS_LA', '4CS_LA2', 'Vector spaces', 'vector spaces', 'UNIT II 12 Hrs\r\nVector spaces:\r\nVector spaces, Subspaces, Linear Independence, Basis and Dimension and Fundamental\r\nSubspaces\r\n', 'www.wikipedia.com'),
('4CS_LA', '4CS_LA3', 'LInear transformatio', 'LInear tranformation and orthoganality', 'UNIT III 13 Hrs\r\nLinear Transformations and Orthogonality:\r\nLinear transformations, Orthogonal subspaces, Inner Products, Projections and Least Squares\r\nApproximations', 'www.youtube.com/khan_tutorial'),
('4CS_LA', '4CS_LA4', 'Eigen value vector', 'orthogonality\r\neigen value & eigen vector', 'UNIT IV 12 Hrs\r\nOrthogonalisation, Eigen Values and Eigen Vectors:\r\nGram- Schmidt Orthogonalization, Eigen values and Eigen vectors, Power method of finding the\r\ndominant Eigen value and the corresponding Eigen vector, Diagonalization & Applications.', 'www.google.com/eigen value+eigenvector'),
('4CS_LA', '4CS_LA5', 'LPP&Numarical soln.', 'numarical solutions\r\nLPP', 'UNIT V 14 Hrs\r\nNumerical solution of linear system of equations & LPP:\r\nIterative methods of solution: Jacobi‘s iteration method, Gauss Seidel Iterative method.\r\nLPP: Formulation of the problem, Graphical method, General Linear Programming Problem,\r\nCanonical & Standard forms, Simplex Method.\r\n', 'www.google.com/lpp'),
('4CS_LA', '4CS_LA_1', 'gaussain elemination', '1.matrices\r\n2.Gaussian elimination\r\n', 'UNIT I 14 Hrs\r\nMatrices and Gaussian Elimination:\r\nGeometry of system of linear equations, Gaussian Elimination, Matrix notation, Triangular\r\nfactorization, Inverses and Transposes\r\n', 'www.google.com');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `course`
--
ALTER TABLE `course`
 ADD PRIMARY KEY (`course_id`), ADD UNIQUE KEY `course_name` (`course_name`), ADD KEY `fk1` (`dep_id`), ADD KEY `fk_sem_course` (`sem`);

--
-- Indexes for table `department`
--
ALTER TABLE `department`
 ADD PRIMARY KEY (`dep_id`), ADD UNIQUE KEY `dep_name` (`dep_name`);

--
-- Indexes for table `pre_req`
--
ALTER TABLE `pre_req`
 ADD PRIMARY KEY (`course_id`,`pre_name`), ADD KEY `fk18` (`pre_name`);

--
-- Indexes for table `semester`
--
ALTER TABLE `semester`
 ADD PRIMARY KEY (`sem`,`dep_id`), ADD KEY `fk2` (`dep_id`);

--
-- Indexes for table `special_topic`
--
ALTER TABLE `special_topic`
 ADD PRIMARY KEY (`topic_id`), ADD UNIQUE KEY `topic_name` (`topic_name`), ADD KEY `fk7` (`sem`), ADD KEY `fk11` (`dep_id`);

--
-- Indexes for table `units`
--
ALTER TABLE `units`
 ADD PRIMARY KEY (`unit_id`), ADD UNIQUE KEY `unit_name` (`unit_name`), ADD UNIQUE KEY `chapters` (`chapters`), ADD UNIQUE KEY `url` (`url`), ADD UNIQUE KEY `url_2` (`url`), ADD UNIQUE KEY `url_3` (`url`), ADD KEY `fk8` (`course_id`);

--
-- Constraints for dumped tables
--

--
-- Constraints for table `course`
--
ALTER TABLE `course`
ADD CONSTRAINT `fk1` FOREIGN KEY (`dep_id`) REFERENCES `department` (`dep_id`),
ADD CONSTRAINT `fk_sem_course` FOREIGN KEY (`sem`) REFERENCES `semester` (`sem`);

--
-- Constraints for table `pre_req`
--
ALTER TABLE `pre_req`
ADD CONSTRAINT `fk17` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`),
ADD CONSTRAINT `fk18` FOREIGN KEY (`pre_name`) REFERENCES `course` (`course_name`);

--
-- Constraints for table `semester`
--
ALTER TABLE `semester`
ADD CONSTRAINT `fk2` FOREIGN KEY (`dep_id`) REFERENCES `department` (`dep_id`);

--
-- Constraints for table `special_topic`
--
ALTER TABLE `special_topic`
ADD CONSTRAINT `fk11` FOREIGN KEY (`dep_id`) REFERENCES `department` (`dep_id`),
ADD CONSTRAINT `fk7` FOREIGN KEY (`sem`) REFERENCES `semester` (`sem`);

--
-- Constraints for table `units`
--
ALTER TABLE `units`
ADD CONSTRAINT `fk8` FOREIGN KEY (`course_id`) REFERENCES `course` (`course_id`);

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
